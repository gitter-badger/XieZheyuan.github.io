<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>谢哲源博客</title>
  <icon>https://www.gravatar.com/avatar/9fbcfbb848f74235334e493cf0a5f329</icon>
  <subtitle>where there is a will , there is a way</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://xiezheyuan.top/"/>
  <updated>2020-08-17T11:22:49.363Z</updated>
  <id>http://xiezheyuan.top/</id>
  
  <author>
    <name>Xie Zheyuan</name>
    <email>billy03282@163.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>1328：【例7.7】光荣的梦想题解</title>
    <link href="http://xiezheyuan.top/2020/07/26/1328-dream-of-glory/"/>
    <id>http://xiezheyuan.top/2020/07/26/1328-dream-of-glory/</id>
    <published>2020-07-26T12:30:00.000Z</published>
    <updated>2020-08-17T11:22:49.363Z</updated>
    
    <content type="html"><![CDATA[<style src="/blogimages/ybt.css" type="text/css"></style><h1 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h1><td class="pcontent"><center><h3>1328：【例7.7】光荣的梦想</h3></center><font size=3><h3>【题目描述】</h3><div class=xxbox><p>Prince对他在这片大陆上维护的秩序感到满意，于是决定启程离开艾泽拉斯。在他动身之前，Prince决定赋予King_Bette最强大的能量以守护世界、保卫这里的平衡与和谐。在那个时代，平衡是个梦想。因为有很多奇异的物种拥有各种不稳定的能量，平衡瞬间即被打破。KB决定求助于你，帮助他完成这个梦想。 </p><p>一串数列即表示一个世界的状态。 </p><p>平衡是指这串数列以升序排列。而从一串无序数列到有序数列需要通过交换数列中的元素来实现。KB的能量只能交换相邻两个数字。他想知道他最少需要交换几次就能使数列有序。</p></div><h3>【输入】</h3><div class=xxbox><p>第一行为数列中数的个数n,第二行为n ≤ 10000个数。表示当前数列的状态。</p></div><h3>【输出】</h3><div class=xxbox><p>输出一个整数，表示最少需要交换几次能达到平衡状态。</p></div><h3>【输入样例】</h3>```42 1 4 3```<font size=3><h3>【输出样例】</h3>```2```<a id="more"></a> <h1 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h1><h2 id="Linux风格C-代码"><a href="#Linux风格C-代码" class="headerlink" title="Linux风格C++代码"></a>Linux风格C++代码</h2><pre class=" language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream></span></span><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;cstring></span></span>using namespace std<span class="token punctuation">;</span><span class="token keyword">int</span> source<span class="token punctuation">[</span><span class="token number">10005</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> ed<span class="token punctuation">[</span><span class="token number">10005</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> n<span class="token punctuation">;</span><span class="token keyword">int</span> ans<span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">px</span><span class="token punctuation">(</span><span class="token keyword">int</span> start<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token keyword">int</span> end<span class="token operator">=</span>n<span class="token number">-1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>end<span class="token operator">-</span>start<span class="token operator">&lt;=</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">int</span> mid <span class="token operator">=</span> <span class="token punctuation">(</span>start<span class="token operator">+</span>end<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span>    <span class="token function">px</span><span class="token punctuation">(</span>start<span class="token punctuation">,</span> mid<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">px</span><span class="token punctuation">(</span>mid<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> i<span class="token operator">=</span>start<span class="token punctuation">,</span>j<span class="token operator">=</span>mid<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>cnt<span class="token operator">=</span>start<span class="token punctuation">;</span>    <span class="token keyword">while</span><span class="token punctuation">(</span>i<span class="token operator">&lt;=</span>mid<span class="token operator">&amp;&amp;</span>j<span class="token operator">&lt;=</span>end<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>source<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">&lt;=</span>source<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            ed<span class="token punctuation">[</span>cnt<span class="token punctuation">]</span><span class="token operator">=</span>source<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>            i<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            ans<span class="token operator">+</span><span class="token operator">=</span><span class="token punctuation">(</span>mid<span class="token operator">+</span><span class="token number">1</span><span class="token operator">-</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>            ed<span class="token punctuation">[</span>cnt<span class="token punctuation">]</span><span class="token operator">=</span>source<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>            j<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        cnt<span class="token operator">++</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token operator">&lt;=</span>mid<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> k<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> k<span class="token operator">&lt;=</span><span class="token punctuation">(</span>mid<span class="token operator">-</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            ed<span class="token punctuation">[</span>cnt<span class="token operator">+</span>k<span class="token punctuation">]</span><span class="token operator">=</span>source<span class="token punctuation">[</span>i<span class="token operator">+</span>k<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>j<span class="token operator">&lt;=</span>end<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> l<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> l<span class="token operator">&lt;=</span><span class="token punctuation">(</span>end<span class="token operator">-</span>j<span class="token punctuation">)</span><span class="token punctuation">;</span> l<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            ed<span class="token punctuation">[</span>cnt<span class="token operator">+</span>l<span class="token punctuation">]</span><span class="token operator">=</span>source<span class="token punctuation">[</span>j<span class="token operator">+</span>l<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">while</span><span class="token punctuation">(</span>i<span class="token operator">&lt;=</span>mid<span class="token punctuation">)</span> <span class="token punctuation">{</span>        ed<span class="token punctuation">[</span>cnt<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span>source<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">while</span><span class="token punctuation">(</span>j<span class="token operator">&lt;=</span>end<span class="token punctuation">)</span> <span class="token punctuation">{</span>        ed<span class="token punctuation">[</span>cnt<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span>source<span class="token punctuation">[</span>j<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span>start<span class="token punctuation">;</span> i<span class="token operator">&lt;=</span>end<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        source<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>ed<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    cin<span class="token operator">>></span>n<span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        cin<span class="token operator">>></span>source<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token function">px</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cout<span class="token operator">&lt;&lt;</span>ans<span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h2 id="Allman风格"><a href="#Allman风格" class="headerlink" title="Allman风格"></a>Allman风格</h2><pre class=" language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream></span></span><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;cstring></span></span>using namespace std<span class="token punctuation">;</span><span class="token keyword">int</span> source<span class="token punctuation">[</span><span class="token number">10005</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> ed<span class="token punctuation">[</span><span class="token number">10005</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> n<span class="token punctuation">;</span><span class="token keyword">int</span> ans<span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">px</span><span class="token punctuation">(</span><span class="token keyword">int</span> start<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token keyword">int</span> end<span class="token operator">=</span>n<span class="token number">-1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>end<span class="token operator">-</span>start<span class="token operator">&lt;=</span><span class="token number">0</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">return</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">int</span> mid <span class="token operator">=</span> <span class="token punctuation">(</span>start<span class="token operator">+</span>end<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span>    <span class="token function">px</span><span class="token punctuation">(</span>start<span class="token punctuation">,</span> mid<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">px</span><span class="token punctuation">(</span>mid<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> i<span class="token operator">=</span>start<span class="token punctuation">,</span>j<span class="token operator">=</span>mid<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>cnt<span class="token operator">=</span>start<span class="token punctuation">;</span>    <span class="token keyword">while</span><span class="token punctuation">(</span>i<span class="token operator">&lt;=</span>mid<span class="token operator">&amp;&amp;</span>j<span class="token operator">&lt;=</span>end<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>source<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">&lt;=</span>source<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            ed<span class="token punctuation">[</span>cnt<span class="token punctuation">]</span><span class="token operator">=</span>source<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>            i<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">else</span>        <span class="token punctuation">{</span>            ans<span class="token operator">+</span><span class="token operator">=</span><span class="token punctuation">(</span>mid<span class="token operator">+</span><span class="token number">1</span><span class="token operator">-</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>            ed<span class="token punctuation">[</span>cnt<span class="token punctuation">]</span><span class="token operator">=</span>source<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>            j<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        cnt<span class="token operator">++</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token operator">&lt;=</span>mid<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> k<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> k<span class="token operator">&lt;=</span><span class="token punctuation">(</span>mid<span class="token operator">-</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            ed<span class="token punctuation">[</span>cnt<span class="token operator">+</span>k<span class="token punctuation">]</span><span class="token operator">=</span>source<span class="token punctuation">[</span>i<span class="token operator">+</span>k<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>j<span class="token operator">&lt;=</span>end<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> l<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> l<span class="token operator">&lt;=</span><span class="token punctuation">(</span>end<span class="token operator">-</span>j<span class="token punctuation">)</span><span class="token punctuation">;</span> l<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            ed<span class="token punctuation">[</span>cnt<span class="token operator">+</span>l<span class="token punctuation">]</span><span class="token operator">=</span>source<span class="token punctuation">[</span>j<span class="token operator">+</span>l<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">while</span><span class="token punctuation">(</span>i<span class="token operator">&lt;=</span>mid<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        ed<span class="token punctuation">[</span>cnt<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span>source<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">while</span><span class="token punctuation">(</span>j<span class="token operator">&lt;=</span>end<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        ed<span class="token punctuation">[</span>cnt<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span>source<span class="token punctuation">[</span>j<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span>start<span class="token punctuation">;</span> i<span class="token operator">&lt;=</span>end<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        source<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>ed<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    cin<span class="token operator">>></span>n<span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        cin<span class="token operator">>></span>source<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token function">px</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cout<span class="token operator">&lt;&lt;</span>ans<span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h2 id="Java风格"><a href="#Java风格" class="headerlink" title="Java风格"></a>Java风格</h2><pre class=" language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream></span></span><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;cstring></span></span>using namespace std<span class="token punctuation">;</span><span class="token keyword">int</span> source<span class="token punctuation">[</span><span class="token number">10005</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> ed<span class="token punctuation">[</span><span class="token number">10005</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> n<span class="token punctuation">;</span><span class="token keyword">int</span> ans<span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">px</span><span class="token punctuation">(</span><span class="token keyword">int</span> start<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token keyword">int</span> end<span class="token operator">=</span>n<span class="token number">-1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>end<span class="token operator">-</span>start<span class="token operator">&lt;=</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">int</span> mid <span class="token operator">=</span> <span class="token punctuation">(</span>start<span class="token operator">+</span>end<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span>    <span class="token function">px</span><span class="token punctuation">(</span>start<span class="token punctuation">,</span> mid<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">px</span><span class="token punctuation">(</span>mid<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> i<span class="token operator">=</span>start<span class="token punctuation">,</span>j<span class="token operator">=</span>mid<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>cnt<span class="token operator">=</span>start<span class="token punctuation">;</span>    <span class="token keyword">while</span><span class="token punctuation">(</span>i<span class="token operator">&lt;=</span>mid<span class="token operator">&amp;&amp;</span>j<span class="token operator">&lt;=</span>end<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>source<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">&lt;=</span>source<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            ed<span class="token punctuation">[</span>cnt<span class="token punctuation">]</span><span class="token operator">=</span>source<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>            i<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            ans<span class="token operator">+</span><span class="token operator">=</span><span class="token punctuation">(</span>mid<span class="token operator">+</span><span class="token number">1</span><span class="token operator">-</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>            ed<span class="token punctuation">[</span>cnt<span class="token punctuation">]</span><span class="token operator">=</span>source<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>            j<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        cnt<span class="token operator">++</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token operator">&lt;=</span>mid<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> k<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> k<span class="token operator">&lt;=</span><span class="token punctuation">(</span>mid<span class="token operator">-</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            ed<span class="token punctuation">[</span>cnt<span class="token operator">+</span>k<span class="token punctuation">]</span><span class="token operator">=</span>source<span class="token punctuation">[</span>i<span class="token operator">+</span>k<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>j<span class="token operator">&lt;=</span>end<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> l<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> l<span class="token operator">&lt;=</span><span class="token punctuation">(</span>end<span class="token operator">-</span>j<span class="token punctuation">)</span><span class="token punctuation">;</span> l<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            ed<span class="token punctuation">[</span>cnt<span class="token operator">+</span>l<span class="token punctuation">]</span><span class="token operator">=</span>source<span class="token punctuation">[</span>j<span class="token operator">+</span>l<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">while</span><span class="token punctuation">(</span>i<span class="token operator">&lt;=</span>mid<span class="token punctuation">)</span> <span class="token punctuation">{</span>        ed<span class="token punctuation">[</span>cnt<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span>source<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">while</span><span class="token punctuation">(</span>j<span class="token operator">&lt;=</span>end<span class="token punctuation">)</span> <span class="token punctuation">{</span>        ed<span class="token punctuation">[</span>cnt<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span>source<span class="token punctuation">[</span>j<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span>start<span class="token punctuation">;</span> i<span class="token operator">&lt;=</span>end<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        source<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>ed<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    cin<span class="token operator">>></span>n<span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        cin<span class="token operator">>></span>source<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token function">px</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cout<span class="token operator">&lt;&lt;</span>ans<span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h2 id="GNU风格"><a href="#GNU风格" class="headerlink" title="GNU风格"></a>GNU风格</h2><pre class=" language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream></span></span><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;cstring></span></span>using namespace std<span class="token punctuation">;</span><span class="token keyword">int</span> source<span class="token punctuation">[</span><span class="token number">10005</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> ed<span class="token punctuation">[</span><span class="token number">10005</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> n<span class="token punctuation">;</span><span class="token keyword">int</span> ans<span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">px</span><span class="token punctuation">(</span><span class="token keyword">int</span> start<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token keyword">int</span> end<span class="token operator">=</span>n<span class="token number">-1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>end<span class="token operator">-</span>start<span class="token operator">&lt;=</span><span class="token number">0</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token keyword">return</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token keyword">int</span> mid <span class="token operator">=</span> <span class="token punctuation">(</span>start<span class="token operator">+</span>end<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span>    <span class="token function">px</span><span class="token punctuation">(</span>start<span class="token punctuation">,</span> mid<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">px</span><span class="token punctuation">(</span>mid<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> i<span class="token operator">=</span>start<span class="token punctuation">,</span>j<span class="token operator">=</span>mid<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>cnt<span class="token operator">=</span>start<span class="token punctuation">;</span>    <span class="token keyword">while</span><span class="token punctuation">(</span>i<span class="token operator">&lt;=</span>mid<span class="token operator">&amp;&amp;</span>j<span class="token operator">&lt;=</span>end<span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>source<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">&lt;=</span>source<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span>                <span class="token punctuation">{</span>                    ed<span class="token punctuation">[</span>cnt<span class="token punctuation">]</span><span class="token operator">=</span>source<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>                    i<span class="token operator">++</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token keyword">else</span>                <span class="token punctuation">{</span>                    ans<span class="token operator">+</span><span class="token operator">=</span><span class="token punctuation">(</span>mid<span class="token operator">+</span><span class="token number">1</span><span class="token operator">-</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>                    ed<span class="token punctuation">[</span>cnt<span class="token punctuation">]</span><span class="token operator">=</span>source<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>                    j<span class="token operator">++</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            cnt<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token operator">&lt;=</span>mid<span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> k<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> k<span class="token operator">&lt;=</span><span class="token punctuation">(</span>mid<span class="token operator">-</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span>                <span class="token punctuation">{</span>                    ed<span class="token punctuation">[</span>cnt<span class="token operator">+</span>k<span class="token punctuation">]</span><span class="token operator">=</span>source<span class="token punctuation">[</span>i<span class="token operator">+</span>k<span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>j<span class="token operator">&lt;=</span>end<span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> l<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> l<span class="token operator">&lt;=</span><span class="token punctuation">(</span>end<span class="token operator">-</span>j<span class="token punctuation">)</span><span class="token punctuation">;</span> l<span class="token operator">++</span><span class="token punctuation">)</span>                <span class="token punctuation">{</span>                    ed<span class="token punctuation">[</span>cnt<span class="token operator">+</span>l<span class="token punctuation">]</span><span class="token operator">=</span>source<span class="token punctuation">[</span>j<span class="token operator">+</span>l<span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token keyword">while</span><span class="token punctuation">(</span>i<span class="token operator">&lt;=</span>mid<span class="token punctuation">)</span>        <span class="token punctuation">{</span>            ed<span class="token punctuation">[</span>cnt<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span>source<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token keyword">while</span><span class="token punctuation">(</span>j<span class="token operator">&lt;=</span>end<span class="token punctuation">)</span>        <span class="token punctuation">{</span>            ed<span class="token punctuation">[</span>cnt<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span>source<span class="token punctuation">[</span>j<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span>start<span class="token punctuation">;</span> i<span class="token operator">&lt;=</span>end<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            source<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>ed<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    cin<span class="token operator">>></span>n<span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            cin<span class="token operator">>></span>source<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token function">px</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cout<span class="token operator">&lt;&lt;</span>ans<span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p><img src="/blogimages/1328-cpp-judge-answer.png" alt="用户名:xiezheyuan，题目编号:1328，运行编号:7757442，代码长度:906Bytes通过"></p>]]></content>
    
    <summary type="html">
    
      &lt;style src=&quot;/blogimages/ybt.css&quot; type=&quot;text/css&quot;&gt;&lt;/style&gt;

&lt;h1 id=&quot;题目：&quot;&gt;&lt;a href=&quot;#题目：&quot; class=&quot;headerlink&quot; title=&quot;题目：&quot;&gt;&lt;/a&gt;题目：&lt;/h1&gt;&lt;td class=&quot;pcontent&quot;&gt;&lt;center&gt;&lt;h3&gt;1328：【例7.7】光荣的梦想&lt;/h3&gt;&lt;/center&gt;&lt;font size=3&gt;&lt;h3&gt;【题目描述】&lt;/h3&gt;
&lt;div class=xxbox&gt;&lt;p&gt;Prince对他在这片大陆上维护的秩序感到满意，于是决定启程离开艾泽拉斯。在他动身之前，Prince决定赋予King_Bette最强大的能量以守护世界、保卫这里的平衡与和谐。在那个时代，平衡是个梦想。因为有很多奇异的物种拥有各种不稳定的能量，平衡瞬间即被打破。KB决定求助于你，帮助他完成这个梦想。 &lt;/p&gt;
&lt;p&gt;一串数列即表示一个世界的状态。 &lt;/p&gt;
&lt;p&gt;平衡是指这串数列以升序排列。而从一串无序数列到有序数列需要通过交换数列中的元素来实现。KB的能量只能交换相邻两个数字。他想知道他最少需要交换几次就能使数列有序。&lt;/p&gt;
&lt;/div&gt;
&lt;h3&gt;【输入】&lt;/h3&gt;
&lt;div class=xxbox&gt;&lt;p&gt;第一行为数列中数的个数n,第二行为n ≤ 10000个数。表示当前数列的状态。&lt;/p&gt;
&lt;/div&gt;&lt;h3&gt;【输出】&lt;/h3&gt;
&lt;div class=xxbox&gt;&lt;p&gt;输出一个整数，表示最少需要交换几次能达到平衡状态。&lt;/p&gt;
&lt;/div&gt;&lt;h3&gt;【输入样例】&lt;/h3&gt;
```
4
2 1 4 3```
&lt;font size=3&gt;&lt;h3&gt;【输出样例】&lt;/h3&gt;
```
2
```
    
    </summary>
    
    
      <category term="计算机" scheme="http://xiezheyuan.top/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
    
      <category term="C/C++" scheme="http://xiezheyuan.top/tags/C-C/"/>
    
      <category term="信息学奥赛一本通" scheme="http://xiezheyuan.top/tags/%E4%BF%A1%E6%81%AF%E5%AD%A6%E5%A5%A5%E8%B5%9B%E4%B8%80%E6%9C%AC%E9%80%9A/"/>
    
  </entry>
  
  <entry>
    <title>Python经验帖——pyinstaller</title>
    <link href="http://xiezheyuan.top/2020/07/12/pythonexp-pyinstaller/"/>
    <id>http://xiezheyuan.top/2020/07/12/pythonexp-pyinstaller/</id>
    <published>2020-07-12T13:12:28.000Z</published>
    <updated>2020-08-17T11:08:22.832Z</updated>
    
    <content type="html"><![CDATA[<h1 id="PyInstaller介绍"><a href="#PyInstaller介绍" class="headerlink" title="PyInstaller介绍"></a>PyInstaller介绍</h1><p>PyInstaller是一个简单的python编译程序，可以把<strong>py</strong> 源文件编译成 <strong>exe</strong> 可执行文件（据说还可以变成.app等，但没有亲测过）</p><a id="more"></a><h1 id="PyInstaller安装"><a href="#PyInstaller安装" class="headerlink" title="PyInstaller安装"></a>PyInstaller安装</h1><p>直接运行pip命令即可</p><pre class=" language-powershell"><code class="language-powershell">python <span class="token operator">-</span>m pip install pyinstaller <span class="token operator">/</span><span class="token operator">/</span>Windows<span class="token operator">/</span>MS<span class="token operator">-</span>DOSpip install pyinstaller <span class="token operator">/</span><span class="token operator">/</span>Liunx<span class="token operator">/</span>Unixpip3 install pyinstaller <span class="token operator">/</span><span class="token operator">/</span>Mac</code></pre><blockquote><p>注：如果下载过慢或超时(Timeout)那么可以选择清华镜像，详细参考 <a href="https://www.cnblogs.com/wqpkita/p/7248525.html" target="_blank" rel="noopener">让python pip使用国内镜像(Cnblog)</a></p></blockquote><h1 id="PyInstaller使用"><a href="#PyInstaller使用" class="headerlink" title="PyInstaller使用"></a>PyInstaller使用</h1><h2 id="写一个python程序"><a href="#写一个python程序" class="headerlink" title="写一个python程序"></a>写一个python程序</h2><p>1.py</p><pre class=" language-python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Hello World"</span><span class="token punctuation">)</span></code></pre><p><strong>strong text</strong></p><h2 id="尝试编译"><a href="#尝试编译" class="headerlink" title="尝试编译"></a>尝试编译</h2><pre class=" language-powershell"><code class="language-powershell">python <span class="token operator">-</span>m PyInstaller 1<span class="token punctuation">.</span>py</code></pre><p>会生成dist目录，dist目录下有1目录，里面就是所有文件</p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="w"><a href="#w" class="headerlink" title="-w"></a>-w</h3><p>生成GUI程序（无CMD窗口）</p><h3 id="F"><a href="#F" class="headerlink" title="-F"></a>-F</h3><p>生成单个文件</p><h3 id="i-ico"><a href="#i-ico" class="headerlink" title="-i [ico]"></a>-i [ico]</h3><p>加图标（很有用）</p>]]></content>
    
    <summary type="html">
    
      PyInstaller是一个简单的python编译程序
    
    </summary>
    
    
      <category term="计算机" scheme="http://xiezheyuan.top/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
    
      <category term="python" scheme="http://xiezheyuan.top/tags/python/"/>
    
      <category term="pyinstaller" scheme="http://xiezheyuan.top/tags/pyinstaller/"/>
    
  </entry>
  
  <entry>
    <title>1326：【例7.5】 取余运算（mod）答案</title>
    <link href="http://xiezheyuan.top/2020/07/05/1326-mod-answer/"/>
    <id>http://xiezheyuan.top/2020/07/05/1326-mod-answer/</id>
    <published>2020-07-05T11:54:00.000Z</published>
    <updated>2020-08-17T11:22:54.049Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h1><p><a href="http://ybt.ssoier.cn:8088/problem_show.php?pid=1326" target="_blank" rel="noopener">点击查看</a></p><a id="more"></a><h1 id="初次解（有错）"><a href="#初次解（有错）" class="headerlink" title="初次解（有错）"></a>初次解（有错）</h1><pre class=" language-cpp"><code class="language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream></span></span><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;cmath></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">typedef</span> <span class="token keyword">long</span> <span class="token keyword">long</span> <span class="token keyword">int</span> lli<span class="token punctuation">;</span>lli b<span class="token punctuation">,</span>p<span class="token punctuation">,</span>k<span class="token punctuation">;</span>lli <span class="token function">pow_</span><span class="token punctuation">(</span>lli a<span class="token punctuation">,</span> lli b<span class="token punctuation">)</span><span class="token punctuation">{</span>    lli ans<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>b<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        ans <span class="token operator">*</span><span class="token operator">=</span> i<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> ans<span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    cin<span class="token operator">>></span>b<span class="token operator">>></span>p<span class="token operator">>></span>k<span class="token punctuation">;</span>    lli ans <span class="token operator">=</span> <span class="token function">pow</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span> p<span class="token punctuation">)</span> <span class="token operator">%</span> k<span class="token punctuation">;</span>    cout<span class="token operator">&lt;&lt;</span>ans<span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h4 id="错误分析"><a href="#错误分析" class="headerlink" title="错误分析"></a>错误分析</h4><p>pow<strong>太大</strong>，无法写入内存</p><h1 id="答案"><a href="#答案" class="headerlink" title="答案"></a>答案</h1><pre class=" language-cpp"><code class="language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream></span></span><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;algorithm></span></span><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;math.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;stdio.h></span></span><span class="token keyword">typedef</span> <span class="token keyword">long</span> <span class="token keyword">long</span> <span class="token keyword">int</span> ll<span class="token punctuation">;</span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>ll <span class="token function">digui</span><span class="token punctuation">(</span>ll b<span class="token punctuation">,</span>ll p<span class="token punctuation">,</span>ll k<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>p<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>    ll re<span class="token operator">=</span><span class="token function">digui</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span>p<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">,</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span>    re <span class="token operator">=</span> <span class="token punctuation">(</span>re <span class="token operator">*</span> re<span class="token punctuation">)</span><span class="token operator">%</span> k<span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>p<span class="token operator">%</span><span class="token number">2</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        re<span class="token operator">=</span> <span class="token punctuation">(</span>re<span class="token operator">*</span>b<span class="token punctuation">)</span><span class="token operator">%</span>k<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> re<span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    ll b<span class="token punctuation">,</span>p<span class="token punctuation">,</span>k<span class="token punctuation">;</span>cin<span class="token operator">>></span>b<span class="token operator">>></span>p<span class="token operator">>></span>k<span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%lld^%lld mod %lld=%lld"</span><span class="token punctuation">,</span>b<span class="token punctuation">,</span>p<span class="token punctuation">,</span>k<span class="token punctuation">,</span><span class="token function">digui</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span>p<span class="token punctuation">,</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;题目：&quot;&gt;&lt;a href=&quot;#题目：&quot; class=&quot;headerlink&quot; title=&quot;题目：&quot;&gt;&lt;/a&gt;题目：&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://ybt.ssoier.cn:8088/problem_show.php?pid=1326&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;点击查看&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="计算机" scheme="http://xiezheyuan.top/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
    
      <category term="C/C++" scheme="http://xiezheyuan.top/tags/C-C/"/>
    
      <category term="信息学奥赛一本通" scheme="http://xiezheyuan.top/tags/%E4%BF%A1%E6%81%AF%E5%AD%A6%E5%A5%A5%E8%B5%9B%E4%B8%80%E6%9C%AC%E9%80%9A/"/>
    
  </entry>
  
  <entry>
    <title>无8数的探究</title>
    <link href="http://xiezheyuan.top/2020/07/04/none-8-number/"/>
    <id>http://xiezheyuan.top/2020/07/04/none-8-number/</id>
    <published>2020-07-04T10:53:00.000Z</published>
    <updated>2020-08-17T11:03:14.163Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是无八数"><a href="#什么是无八数" class="headerlink" title="什么是无八数"></a>什么是无八数</h1><p>简而述之，无八数就是“<strong>123456789</strong>中去掉<strong>8</strong>，得到的<strong>12345679</strong>，就是<strong>无八数</strong></p><a id="more"></a><h2 id="无八数的性质"><a href="#无八数的性质" class="headerlink" title="无八数的性质"></a>无八数的性质</h2><p><img src="/blogimages/none-eight-define.gif" alt=""></p><p><img src="/blogimages/none-eight-define2.gif" alt=""></p><h2 id="无八数为什么会这样"><a href="#无八数为什么会这样" class="headerlink" title="无八数为什么会这样"></a>无八数为什么会这样</h2><p>九位数<strong>111111111</strong>，除以9等于<strong>12345679</strong>!<br><img src="/blogimages/111111111-and-none-eight.gif" alt=""></p><h1 id="更多无八数"><a href="#更多无八数" class="headerlink" title="更多无八数"></a>更多无八数</h1><p>可以通过以下公式推导出十进制无八数类似数<br><img src="/blogimages/none-eight-create.gif" alt=""></p><p><img src="/blogimages/none-eight-use.gif" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;什么是无八数&quot;&gt;&lt;a href=&quot;#什么是无八数&quot; class=&quot;headerlink&quot; title=&quot;什么是无八数&quot;&gt;&lt;/a&gt;什么是无八数&lt;/h1&gt;&lt;p&gt;简而述之，无八数就是“&lt;strong&gt;123456789&lt;/strong&gt;中去掉&lt;strong&gt;8&lt;/strong&gt;，得到的&lt;strong&gt;12345679&lt;/strong&gt;，就是&lt;strong&gt;无八数&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="数学" scheme="http://xiezheyuan.top/categories/%E6%95%B0%E5%AD%A6/"/>
    
    
      <category term="无八数" scheme="http://xiezheyuan.top/tags/%E6%97%A0%E5%85%AB%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>python简易数据分析</title>
    <link href="http://xiezheyuan.top/2020/07/04/python-simple-data-analysis/"/>
    <id>http://xiezheyuan.top/2020/07/04/python-simple-data-analysis/</id>
    <published>2020-07-04T10:47:50.000Z</published>
    <updated>2020-08-17T11:11:14.732Z</updated>
    
    <content type="html"><![CDATA[<h1 id="python简易数据分析"><a href="#python简易数据分析" class="headerlink" title="python简易数据分析"></a>python简易数据分析</h1><h2 id="1、平均数-Average"><a href="#1、平均数-Average" class="headerlink" title="1、平均数(Average)"></a>1、平均数(Average)</h2><a id="more"></a><p>话不多说，直接上代码</p><pre class=" language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">average</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">:</span>    sum_ <span class="token operator">=</span> sum<span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># 调用内置求和函数</span>    a_val <span class="token operator">=</span> sum_ <span class="token operator">/</span> len<span class="token punctuation">(</span>data<span class="token punctuation">)</span>    <span class="token keyword">return</span> a_val</code></pre><h2 id="2、方差-Variance"><a href="#2、方差-Variance" class="headerlink" title="2、方差(Variance)"></a>2、方差(Variance)</h2><h3 id="何谓方差"><a href="#何谓方差" class="headerlink" title="何谓方差?"></a>何谓方差?</h3><blockquote><p>方差是在概率论和统计方差衡量随机变量或一组数据时离散程度的度量。概率论中方差用来度量随机变量和其数学期望（即均值）之间的偏离程度。统计中的方差（样本方差）是每个样本值与全体样本值的平均数之差的平方值的平均数。在许多实际问题中，研究方差即偏离程度有着重要意义。<br>—— <a href="https://baike.baidu.com/item/%E6%96%B9%E5%B7%AE/3108412" target="_blank" rel="noopener">百度百科</a></p></blockquote><p><img src="/blogimages/variance.svg" alt="方差公式图片"></p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><pre class=" language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">variance</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">:</span>    a_val <span class="token operator">=</span> average<span class="token punctuation">(</span>data<span class="token punctuation">)</span>    var <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> data<span class="token punctuation">:</span>        var <span class="token operator">+=</span> abs<span class="token punctuation">(</span>a_val <span class="token operator">-</span> i<span class="token punctuation">)</span> <span class="token operator">**</span> <span class="token number">2</span>    var <span class="token operator">/=</span> len<span class="token punctuation">(</span>data<span class="token punctuation">)</span>    <span class="token keyword">return</span> a_val</code></pre><h2 id="平均差-Mean-Deviation"><a href="#平均差-Mean-Deviation" class="headerlink" title="平均差(Mean Deviation)"></a>平均差(Mean Deviation)</h2><h3 id="何谓平均差"><a href="#何谓平均差" class="headerlink" title="何谓平均差"></a>何谓平均差</h3><blockquote><p>平均差（Mean Deviation）是表示各个变量值之间差异程度的数值之一。指各个变量值同平均数的离差绝对值的算术平均数。<br>  平均差异大，表明各标志值与算术平均数的差异程度越大，该算术平均数的代表性就越小；平均差越小，表明各标志值与算术平均数的差异程度越小，该算术平均数的代表性就越大。因离差和为零，离差的平均数不能将离差和除以离差的个数求得，而必须将离差取绝对数来消除正负号。平均差是反应各标志值与算术平均数之间的平均差异。<br>——<a href="https://baike.baidu.com/item/%E5%B9%B3%E5%9D%87%E5%B7%AE" target="_blank" rel="noopener">百度百科</a></p></blockquote><p><img src="/blogimages/mean.svg" alt="平均差公式图片"></p><h2 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h2><pre class=" language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">mean</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">:</span>    a_val <span class="token operator">=</span> average<span class="token punctuation">(</span>data<span class="token punctuation">)</span>    var <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> data<span class="token punctuation">:</span>        var <span class="token operator">+=</span> abs<span class="token punctuation">(</span>a_val <span class="token operator">-</span> i<span class="token punctuation">)</span>    var <span class="token operator">/=</span> len<span class="token punctuation">(</span>data<span class="token punctuation">)</span>    <span class="token keyword">return</span> var</code></pre><h2 id="标准差-Standard-Deviation"><a href="#标准差-Standard-Deviation" class="headerlink" title="标准差(Standard Deviation)"></a>标准差(Standard Deviation)</h2><h3 id="何谓标准差"><a href="#何谓标准差" class="headerlink" title="何谓标准差"></a>何谓标准差</h3><blockquote><p>标准差（Standard Deviation） ，是离均差平方的算术平均数的平方根，用σ表示。在概率统计中最常使用作为统计分布程度上的测量。标准差是方差的算术平方根。标准差能反映一个数据集的离散程度。平均数相同的两组数据，标准差未必相同。<br>——<a href="https://baike.baidu.com/item/%E6%A0%87%E5%87%86%E5%B7%AE" target="_blank" rel="noopener">百度百科</a></p></blockquote><h3 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h3><pre class=" language-python"><code class="language-python"><span class="token keyword">from</span> math <span class="token keyword">import</span> sqrt<span class="token keyword">def</span> <span class="token function">sd</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">:</span>    v <span class="token operator">=</span> sqrt<span class="token punctuation">(</span>variance<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> v</code></pre><h2 id="极差-Range"><a href="#极差-Range" class="headerlink" title="极差(Range)"></a>极差(Range)</h2><p>这就更不用说啦！</p><pre class=" language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">range_</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">:</span>    max_ <span class="token operator">=</span> max<span class="token punctuation">(</span>data<span class="token punctuation">)</span>    min_ <span class="token operator">=</span> min<span class="token punctuation">(</span>data<span class="token punctuation">)</span>    <span class="token keyword">return</span> max_ <span class="token operator">-</span> min_</code></pre><h2 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h2><p>完整代码如下所示（PEP通过）</p><pre class=" language-python"><code class="language-python"><span class="token keyword">from</span> math <span class="token keyword">import</span> sqrt<span class="token keyword">def</span> <span class="token function">average</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">:</span>    sum_ <span class="token operator">=</span> sum<span class="token punctuation">(</span>data<span class="token punctuation">)</span>    a_val <span class="token operator">=</span> sum_ <span class="token operator">/</span> len<span class="token punctuation">(</span>data<span class="token punctuation">)</span>    <span class="token keyword">return</span> a_val<span class="token keyword">def</span> <span class="token function">variance</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">:</span>    a_val <span class="token operator">=</span> average<span class="token punctuation">(</span>data<span class="token punctuation">)</span>    var <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> data<span class="token punctuation">:</span>        var <span class="token operator">+=</span> abs<span class="token punctuation">(</span>a_val <span class="token operator">-</span> i<span class="token punctuation">)</span> <span class="token operator">**</span> <span class="token number">2</span>    var <span class="token operator">/=</span> len<span class="token punctuation">(</span>data<span class="token punctuation">)</span>    <span class="token keyword">return</span> a_val<span class="token keyword">def</span> <span class="token function">mean</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">:</span>    a_val <span class="token operator">=</span> average<span class="token punctuation">(</span>data<span class="token punctuation">)</span>    var <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> data<span class="token punctuation">:</span>        var <span class="token operator">+=</span> abs<span class="token punctuation">(</span>a_val <span class="token operator">-</span> i<span class="token punctuation">)</span>    var <span class="token operator">/=</span> len<span class="token punctuation">(</span>data<span class="token punctuation">)</span>    <span class="token keyword">return</span> var<span class="token keyword">def</span> <span class="token function">sd</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">:</span>    v <span class="token operator">=</span> sqrt<span class="token punctuation">(</span>variance<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> v<span class="token keyword">def</span> <span class="token function">range_</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">:</span>    max_ <span class="token operator">=</span> max<span class="token punctuation">(</span>data<span class="token punctuation">)</span>    min_ <span class="token operator">=</span> min<span class="token punctuation">(</span>data<span class="token punctuation">)</span>    <span class="token keyword">return</span> max_ <span class="token operator">-</span> min_</code></pre>]]></content>
    
    <summary type="html">
    
      简易数据分析
    
    </summary>
    
    
      <category term="计算机" scheme="http://xiezheyuan.top/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
    
      <category term="python" scheme="http://xiezheyuan.top/tags/python/"/>
    
      <category term="数据分析" scheme="http://xiezheyuan.top/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>html 嵌入404公益页面</title>
    <link href="http://xiezheyuan.top/2020/04/07/404page/"/>
    <id>http://xiezheyuan.top/2020/04/07/404page/</id>
    <published>2020-04-06T16:00:00.000Z</published>
    <updated>2020-08-17T11:02:37.665Z</updated>
    
    <content type="html"><![CDATA[<p>大部分人在网上看到的公益404页面是如何写的呢？</p><a id="more"></a><p>其实很简单！</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>zh<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>404 Not Found<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js<span class="token punctuation">"</span></span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span> <span class="token attr-name">homePageUrl</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>自己的网站地址<span class="token punctuation">"</span></span> <span class="token attr-name">homePageName</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>回到我的主页<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>footer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Copyright © 2020自己的名字. All Rights Reserved.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>就区区13行，就实现了！</p><p>首发于CSDN博客<a href="https://blog.csdn.net/pythonbilly" target="_blank" rel="noopener">https://blog.csdn.net/pythonbilly</a></p>]]></content>
    
    <summary type="html">
    
      大部分人在网上看到的公益404页面是如何写的呢？
    
    </summary>
    
    
      <category term="计算机" scheme="http://xiezheyuan.top/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
    
      <category term="HTML" scheme="http://xiezheyuan.top/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>超完整Github开发指南</title>
    <link href="http://xiezheyuan.top/2020/04/03/github-guide/"/>
    <id>http://xiezheyuan.top/2020/04/03/github-guide/</id>
    <published>2020-04-02T16:00:00.000Z</published>
    <updated>2020-08-17T11:03:05.513Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0、目录"><a href="#0、目录" class="headerlink" title="0、目录"></a>0、目录</h1><a id="more"></a><p><a href="#first">1、注册GitHub 账户</a><br><a href="#second">2、创建第一个仓库 </a><br><a href="#third">3、上传至仓库</a><br><a name="#fourth">4、使用Github Pages创造自己的网站</a></p><h1 id="1、注册GitHub-账户"><a href="#1、注册GitHub-账户" class="headerlink" title="1、注册GitHub 账户"></a>1、注册GitHub 账户</h1><p>访问<a href="http://www.github.com/" target="_blank" rel="noopener">Github</a>,若无意外，则效果为以下所示（Firefox)</p><p><img src="/blogimages/github-mainpage.png" alt="Github首页"></p><p>输入<strong>用户名</strong>、<strong>邮箱（确保可用）</strong>、<strong>密码</strong>，点击Sign up for Github，再填写几个个人信息，就Well Done了！</p><p>注册完后点击Sign in,填写用户名及密码即可。</p><p><img src="/blogimages/github-login.png" alt="Github 登录页"></p><p>然后就可以看到个人界面了！</p><p><img src="/blogimages/github-logined.png" alt="Github 个人主页"><br><a name="second"></a></p><h1 id="2、创建第一个仓库"><a href="#2、创建第一个仓库" class="headerlink" title="2、创建第一个仓库"></a>2、创建第一个仓库</h1><p>点击Repositories右侧的New，即可跳转至仓库创造页！</p><p>​<img src="/blogimages/github-new.png" alt="仓库创造页"></p><p>可以填写Repository name(仓库名称）、Description（仓库描述）等。</p><p>注：关于license：请访问<a href="https://choosealicense.com/" target="_blank" rel="noopener">Choose an open source license</a></p><p><a name="third"></a></p><h1 id="3、上传至仓库"><a href="#3、上传至仓库" class="headerlink" title="3、上传至仓库"></a>3、上传至仓库</h1><p>1、下载<a href="https://desktop.github.com/" target="_blank" rel="noopener">GitHub Desktop</a></p><p>2、打开软件</p><p>3、克隆仓库</p><p><img src="/blogimages/github-desktop.png" alt="Github Desktop"></p><p>编写，点击<strong>COMMIT TO MASTER</strong>和<strong>PUSH ORIGN</strong>即可！<br><a name="fourth"></a></p><h1 id="4、使用Github-Pages创造自己的网站"><a href="#4、使用Github-Pages创造自己的网站" class="headerlink" title="4、使用Github Pages创造自己的网站"></a>4、使用Github Pages创造自己的网站</h1><p>新建一个仓库，以<strong>username.github.io</strong> 命名（username是指你的用户名）<br>新建完成后，使用Github Desktop推送网页至该仓库。<br>Q&amp;：万一网站做不好肿么办？<br>A：<br>1、使用Github主题：<br>访问<strong>Settings-&gt;GitHub Pages-&gt;Theme Chooser-&gt;Change Theme</strong> 选择样式，不过好像只适合写主页，并且必须使用<strong>Markdown</strong>格式。<br>2、使用模板网站，这里推荐<a href="https://html5up.net/" target="_blank" rel="noopener">HTML5 UP</a><br><img src="/blogimages/htmlup.png" alt="HTML5UP"><br>看到自己心仪的主题，可以选择<strong>Free Download</strong>，或者点击<strong>Live Demo</strong>查看预览。<br>注：大家可以看看我的网站：<a href="http://xiezheyuan.github.io/" target="_blank" rel="noopener">xiezheyuan.github.io</a></p><p><a name="fifth"></a></p><h1 id="5、为自己的项目创建Github-Pages-网站"><a href="#5、为自己的项目创建Github-Pages-网站" class="headerlink" title="5、为自己的项目创建Github Pages 网站"></a>5、为自己的项目创建Github Pages 网站</h1><p>与<em>4、使用Github Pages创造自己的网站</em> 类似，不过需要选择Settings-&gt;GitHub Pages-&gt;Source选择上传地址，默认为None，建议为<strong>master branch /docs folder</strong>，这样可以将网站与程序分开（<strong>master branch /docs folder</strong>指仅上传docs目录）<br>首发于CSDN博客<a href="https://blog.csdn.net/pythonbilly" target="_blank" rel="noopener">https://blog.csdn.net/pythonbilly</a></p>]]></content>
    
    <summary type="html">
    
      Github开发指南
    
    </summary>
    
    
      <category term="计算机" scheme="http://xiezheyuan.top/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
    
      <category term="Github" scheme="http://xiezheyuan.top/tags/Github/"/>
    
  </entry>
  
  <entry>
    <title>python 制作CPU压力测试——圆周率计算</title>
    <link href="http://xiezheyuan.top/2020/04/01/python-countpi/"/>
    <id>http://xiezheyuan.top/2020/04/01/python-countpi/</id>
    <published>2020-03-31T16:00:00.000Z</published>
    <updated>2020-08-17T11:11:11.134Z</updated>
    
    <content type="html"><![CDATA[<p>众所周知，反正弦函数asin有以下公式（如在计算器中是弧度制下）：</p><a id="more"></a><p><img src="https://private.codecogs.com/gif.latex?%5Cfrac%7B%5Cpi%7D%7B2%7D%3Darcsin%5Cleft%20%28%201%20%5Cright%20%29" alt="asin(1)=pi/2"></p><p>百度百科搜索三角函数公式，在泰勒展开式一节中有以下公式：<br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9ia2ltZy5jZG4uYmNlYm9zLmNvbS9waWMvYjk5OWE5MDE0YzA4NmUwNmNhZDMzMzFmMGQwODdiZjQwYWQxY2I2Zg?x-oss-process=image/format,png" alt="其中arcsin写错了，(2k+1)!!应该是(2k-1)!!另外x!!指双阶乘，不同于阶乘"></p><blockquote><p>其中arcsin写错了，(2k+1)!!应该是(2k-1)!!<br>另外x!!指双阶乘，不同于阶乘</p></blockquote><p>其中arcsin写错了，(2k+1)!!应该是(2k-1)!!<br>另外x!!指双阶乘，不同于阶乘</p><p>双阶乘实现：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">doubleFact</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>    ans<span class="token operator">=</span><span class="token number">1</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>x<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> i<span class="token operator">%</span><span class="token number">2</span> <span class="token operator">==</span> x<span class="token operator">%</span><span class="token number">2</span><span class="token punctuation">:</span>            ans<span class="token operator">*=</span>i    <span class="token keyword">return</span> ans</code></pre><p>asin函数实现</p><pre class=" language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">asin</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">:</span>    answer<span class="token operator">=</span><span class="token number">0</span>    <span class="token keyword">for</span> k <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>t<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        a<span class="token operator">=</span><span class="token punctuation">(</span>doubleFact<span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">*</span>k<span class="token number">-1</span><span class="token punctuation">)</span><span class="token operator">/</span>doubleFact<span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">*</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>pow<span class="token punctuation">(</span>x<span class="token punctuation">,</span><span class="token number">2</span><span class="token operator">*</span>k<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">*</span>k<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"k=%d,a=%s"</span><span class="token operator">%</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span>        answer<span class="token operator">+=</span>a</code></pre><p>其中x为角度（弧度），t为计算次数。</p><p>注：代码奇慢无比，不要真正用来计算pi，又慢精度又不高，建议只用来编写CPU压力测试程序！</p><p>总代吗贴出来：</p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># import math</span><span class="token keyword">def</span> <span class="token function">doubleFact</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>    ans<span class="token operator">=</span><span class="token number">1</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>x<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> i<span class="token operator">%</span><span class="token number">2</span> <span class="token operator">==</span> x<span class="token operator">%</span><span class="token number">2</span><span class="token punctuation">:</span>            ans<span class="token operator">*=</span>i    <span class="token keyword">return</span> ans<span class="token keyword">def</span> <span class="token function">asin</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">:</span>    answer<span class="token operator">=</span><span class="token number">0</span>    <span class="token keyword">for</span> k <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>t<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        a<span class="token operator">=</span><span class="token punctuation">(</span>doubleFact<span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">*</span>k<span class="token number">-1</span><span class="token punctuation">)</span><span class="token operator">/</span>doubleFact<span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">*</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>pow<span class="token punctuation">(</span>x<span class="token punctuation">,</span><span class="token number">2</span><span class="token operator">*</span>k<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">*</span>k<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"k=%d,a=%s"</span><span class="token operator">%</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span>        answer<span class="token operator">+=</span>a    <span class="token keyword">return</span> answer<span class="token keyword">print</span><span class="token punctuation">(</span>asin<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">2</span><span class="token punctuation">)</span></code></pre><p>计算结果：</p><pre class=" language-python"><code class="language-python">k<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">1.0</span>k<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.16666666666666666</span>k<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.07500000000000001</span>k<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.04464285714285714</span>k<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.030381944444444444</span>k<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.022372159090909092</span>k<span class="token operator">=</span><span class="token number">6</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.017352764423076924</span>k<span class="token operator">=</span><span class="token number">7</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.013964843749999999</span>k<span class="token operator">=</span><span class="token number">8</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.011551800896139705</span>k<span class="token operator">=</span><span class="token number">9</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.009761609529194078</span>k<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.008390335809616815</span>k<span class="token operator">=</span><span class="token number">11</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.007312525873598845</span>k<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.006447210311889649</span>k<span class="token operator">=</span><span class="token number">13</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.005740037670841923</span>k<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.005153309682319904</span>k<span class="token operator">=</span><span class="token number">15</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.004660143486915096</span>k<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.004240907093679363</span>k<span class="token operator">=</span><span class="token number">17</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.003880964558837669</span>k<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.0035692053938259347</span>k<span class="token operator">=</span><span class="token number">19</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.0032970595034734844</span>k<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.0030578216492580306</span>k<span class="token operator">=</span><span class="token number">21</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.002846178401108942</span>k<span class="token operator">=</span><span class="token number">22</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.00265787063820729</span>k<span class="token operator">=</span><span class="token number">23</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.0024894486782468836</span>k<span class="token operator">=</span><span class="token number">24</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.002338091892111975</span>k<span class="token operator">=</span><span class="token number">25</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.0022014739737101384</span>k<span class="token operator">=</span><span class="token number">26</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.002077661032518167</span>k<span class="token operator">=</span><span class="token number">27</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.0019650336162772837</span>k<span class="token operator">=</span><span class="token number">28</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.0018622264064031273</span>k<span class="token operator">=</span><span class="token number">29</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.0017680811205154183</span>k<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.0016816093935831068</span>k<span class="token operator">=</span><span class="token number">31</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.0016019632753514438</span>k<span class="token operator">=</span><span class="token number">32</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.0015284115961225677</span>k<span class="token operator">=</span><span class="token number">33</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.0014603208940791154</span>k<span class="token operator">=</span><span class="token number">34</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.0013971399176302534</span>k<span class="token operator">=</span><span class="token number">35</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.0013383869512751784</span>k<span class="token operator">=</span><span class="token number">36</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.0012836393876290285</span>k<span class="token operator">=</span><span class="token number">37</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.001232525098500017</span>k<span class="token operator">=</span><span class="token number">38</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.0011847152561624392</span>k<span class="token operator">=</span><span class="token number">39</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.0011399183307022236</span>k<span class="token operator">=</span><span class="token number">40</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.0010978750465914472</span>k<span class="token operator">=</span><span class="token number">41</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.001058354125872243</span>k<span class="token operator">=</span><span class="token number">42</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.0010211486797106276</span>k<span class="token operator">=</span><span class="token number">43</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.0009860731369833312</span>k<span class="token operator">=</span><span class="token number">44</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.0009529606197429564</span>k<span class="token operator">=</span><span class="token number">45</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.0009216606921836336</span>k<span class="token operator">=</span><span class="token number">46</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.0008920374230917098</span>k<span class="token operator">=</span><span class="token number">47</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.0008639677124658675</span>k<span class="token operator">=</span><span class="token number">48</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.000837339841602712</span>k<span class="token operator">=</span><span class="token number">49</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.0008120522129086703</span>k<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.0007880122513582057</span>k<span class="token operator">=</span><span class="token number">51</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.0007651354441371649</span>k<span class="token operator">=</span><span class="token number">52</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.0007433444987958959</span>k<span class="token operator">=</span><span class="token number">53</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.0007225686033525614</span>k<span class="token operator">=</span><span class="token number">54</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.0007027427743614913</span>k<span class="token operator">=</span><span class="token number">55</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.0006838072810965503</span>k<span class="token operator">=</span><span class="token number">56</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.0006657071357767537</span>k<span class="token operator">=</span><span class="token number">57</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.000648391641245871</span>k<span class="token operator">=</span><span class="token number">58</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.0006318139887619102</span>k<span class="token operator">=</span><span class="token number">59</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.0006159308995984751</span>k<span class="token operator">=</span><span class="token number">60</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.0006007023050422869</span>k<span class="token operator">=</span><span class="token number">61</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.0005860910601175613</span>k<span class="token operator">=</span><span class="token number">62</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.0005720626870011989</span>k<span class="token operator">=</span><span class="token number">63</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.0005585851446315293</span>k<span class="token operator">=</span><span class="token number">64</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.0005456286214729855</span>k<span class="token operator">=</span><span class="token number">65</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.0005331653487922461</span>k<span class="token operator">=</span><span class="token number">66</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.0005211694321385132</span>k<span class="token operator">=</span><span class="token number">67</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.0005096166990104013</span>k<span class="token operator">=</span><span class="token number">68</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.000498484560941636</span>k<span class="token operator">=</span><span class="token number">69</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.0004877518884534234</span>k<span class="token operator">=</span><span class="token number">70</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.000477398897508034</span>k<span class="token operator">=</span><span class="token number">71</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.000467407046260082</span>k<span class="token operator">=</span><span class="token number">72</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.00045775894104274026</span>k<span class="token operator">=</span><span class="token number">73</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.00044843825064875664</span>k<span class="token operator">=</span><span class="token number">74</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.0004394296280731444</span>k<span class="token operator">=</span><span class="token number">75</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.00043071863897800795</span>k<span class="token operator">=</span><span class="token number">76</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.0004222916962219453</span>k<span class="token operator">=</span><span class="token number">77</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.0004141359998684339</span>k<span class="token operator">=</span><span class="token number">78</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.0004062394821508707</span>k<span class="token operator">=</span><span class="token number">79</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.00039859075692766545</span>k<span class="token operator">=</span><span class="token number">80</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.00039117907320994984</span>k<span class="token operator">=</span><span class="token number">81</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.0003839942723879085</span>k<span class="token operator">=</span><span class="token number">82</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.00037702674882018997</span>k<span class="token operator">=</span><span class="token number">83</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.000370267413484946</span>k<span class="token operator">=</span><span class="token number">84</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.0003637076604213038</span>k<span class="token operator">=</span><span class="token number">85</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.0003573393357169886</span>k<span class="token operator">=</span><span class="token number">86</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.0003511547088217658</span>k<span class="token operator">=</span><span class="token number">87</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.00034514644598773823</span>k<span class="token operator">=</span><span class="token number">88</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.00033930758565660254</span>k<span class="token operator">=</span><span class="token number">89</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.00033363151563102445</span>k<span class="token operator">=</span><span class="token number">90</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.0003281119518825554</span>k<span class="token operator">=</span><span class="token number">91</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.00032274291886219894</span>k<span class="token operator">=</span><span class="token number">92</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.00031751873119201474</span>k<span class="token operator">=</span><span class="token number">93</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.0003124339766271837</span>k<span class="token operator">=</span><span class="token number">94</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.00030748350018788655</span>k<span class="token operator">=</span><span class="token number">95</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.00030266238936928896</span>k<span class="token operator">=</span><span class="token number">96</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.0002979659603459907</span>k<span class="token operator">=</span><span class="token number">97</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.0002933897450945759</span>k<span class="token operator">=</span><span class="token number">98</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.0002889294793644786</span>k<span class="token operator">=</span><span class="token number">99</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.00028458109143332955</span>k<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token number">0.0002803406915883404</span><span class="token number">3.0292687382573695</span></code></pre><p>还是不是很精确啊！</p><p>PS：花了0.002991199493408203秒，虽然看起来很快，但是10000次花了快5分钟呢！</p><p>首发于CSDN博客<a href="https://blog.csdn.net/pythonbilly" target="_blank" rel="noopener">https://blog.csdn.net/pythonbilly</a></p>]]></content>
    
    <summary type="html">
    
      制作CPU压力测试
    
    </summary>
    
    
      <category term="计算机" scheme="http://xiezheyuan.top/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
    
      <category term="python" scheme="http://xiezheyuan.top/tags/python/"/>
    
      <category term="圆周率" scheme="http://xiezheyuan.top/tags/%E5%9C%86%E5%91%A8%E7%8E%87/"/>
    
  </entry>
  
  <entry>
    <title>python实践项目-shop</title>
    <link href="http://xiezheyuan.top/2019/10/26/python%E5%AE%9E%E8%B7%B5%E9%A1%B9%E7%9B%AE-shop/"/>
    <id>http://xiezheyuan.top/2019/10/26/python%E5%AE%9E%E8%B7%B5%E9%A1%B9%E7%9B%AE-shop/</id>
    <published>2019-10-26T13:48:18.000Z</published>
    <updated>2020-08-17T11:04:50.309Z</updated>
    
    <content type="html"><![CDATA[<h2 id="python实践项目-shop"><a href="#python实践项目-shop" class="headerlink" title="python实践项目-shop"></a>python实践项目-shop</h2><h2 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h2><ul><li>文件打开/保存</li><li>cmd应用</li><li>prettytable<a id="more"></a><h2 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h2></li></ul><p>使用CMD程序，实现商店管理<br>python3+pycharm</p><h2 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h2><p><strong>getPicke.py</strong> 初始化PICKLE</p><pre class=" language-python"><code class="language-python">data<span class="token operator">=</span><span class="token string">"[[\"6953787355327\",\"晨光24色水彩笔\",\"25\"]]"</span>obj<span class="token operator">=</span>open<span class="token punctuation">(</span><span class="token string">"libray/shop.pkl"</span><span class="token punctuation">,</span><span class="token string">"w"</span><span class="token punctuation">)</span>obj<span class="token punctuation">.</span>write<span class="token punctuation">(</span>data<span class="token punctuation">)</span>obj<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p><strong>pklAdmin.py</strong> 管理</p><pre class=" language-python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Shop1.0 Pkl File Admin Program"</span><span class="token punctuation">)</span><span class="token keyword">import</span> prettytable<span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    cmd<span class="token operator">=</span>input<span class="token punctuation">(</span><span class="token string">">>>"</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> cmd <span class="token operator">==</span> <span class="token string">"quit"</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"exiting..."</span><span class="token punctuation">)</span>        <span class="token keyword">break</span>    <span class="token keyword">elif</span> cmd <span class="token operator">==</span> <span class="token string">"exit"</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Do you want to exit now?"</span><span class="token punctuation">)</span>        option<span class="token operator">=</span>input<span class="token punctuation">(</span><span class="token string">"(y/&lt;Other>)"</span><span class="token punctuation">)</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>option <span class="token operator">==</span> <span class="token string">"y"</span> <span class="token operator">or</span> option <span class="token operator">==</span> <span class="token string">"Y"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"exiting..."</span><span class="token punctuation">)</span>            <span class="token keyword">break</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Canceled to exit"</span><span class="token punctuation">)</span>    <span class="token keyword">elif</span> cmd <span class="token operator">==</span> <span class="token string">"read"</span> <span class="token operator">or</span> cmd <span class="token operator">==</span> <span class="token string">"Read"</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"You Want To Read Commodities."</span><span class="token punctuation">)</span>        tobj<span class="token operator">=</span>prettytable<span class="token punctuation">.</span>PrettyTable<span class="token punctuation">(</span><span class="token punctuation">[</span>            <span class="token string">"Bar code"</span><span class="token punctuation">,</span>            <span class="token string">"Trade name"</span><span class="token punctuation">,</span>            <span class="token string">"Price(RMB)"</span>        <span class="token punctuation">]</span><span class="token punctuation">)</span>        o<span class="token operator">=</span>eval<span class="token punctuation">(</span>open<span class="token punctuation">(</span><span class="token string">"libray/shop.pkl"</span><span class="token punctuation">,</span><span class="token string">"r"</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">"gbk"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> o<span class="token punctuation">:</span>            tobj<span class="token punctuation">.</span>add_row<span class="token punctuation">(</span>i<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>tobj<span class="token punctuation">)</span>    <span class="token keyword">elif</span> cmd <span class="token operator">==</span> <span class="token string">"add"</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"You Want To Add a Commodity"</span><span class="token punctuation">)</span>        s<span class="token operator">=</span>input<span class="token punctuation">(</span><span class="token string">"Input Commodity Name..."</span><span class="token punctuation">)</span>        p<span class="token operator">=</span>input<span class="token punctuation">(</span><span class="token string">"Input Commodity Price..."</span><span class="token punctuation">)</span>        b <span class="token operator">=</span> input<span class="token punctuation">(</span><span class="token string">"Input Commodity Bar Code..."</span><span class="token punctuation">)</span>        o <span class="token operator">=</span> eval<span class="token punctuation">(</span>open<span class="token punctuation">(</span><span class="token string">"libray/shop.pkl"</span><span class="token punctuation">,</span> <span class="token string">"r"</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">"gbk"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        o<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">[</span>b<span class="token punctuation">,</span>s<span class="token punctuation">,</span>p<span class="token punctuation">]</span><span class="token punctuation">)</span>        obj<span class="token operator">=</span>open<span class="token punctuation">(</span><span class="token string">"libray/shop.pkl"</span><span class="token punctuation">,</span><span class="token string">"w"</span><span class="token punctuation">)</span>        obj<span class="token punctuation">.</span>write<span class="token punctuation">(</span>str<span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">)</span>        obj<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Now,Add Right..."</span><span class="token punctuation">)</span>        tobj<span class="token operator">=</span>prettytable<span class="token punctuation">.</span>PrettyTable<span class="token punctuation">(</span><span class="token punctuation">[</span>            <span class="token string">"Bar code"</span><span class="token punctuation">,</span>            <span class="token string">"Trade name"</span><span class="token punctuation">,</span>            <span class="token string">"Price(RMB)"</span>        <span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> o<span class="token punctuation">:</span>            tobj<span class="token punctuation">.</span>add_row<span class="token punctuation">(</span>i<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>tobj<span class="token punctuation">)</span>    <span class="token keyword">elif</span> cmd <span class="token operator">==</span> <span class="token string">"help"</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"PklAdmin Document"</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token triple-quoted-string string">'''        add:Add items to program directory.        read/Read:Displays all saved items.        exit:Quit program(can cancel).        quit:Quit program(can't cancel)        del/delete/remove:Remove items to program directory.        help:Displays this.        '''</span><span class="token punctuation">)</span>    <span class="token keyword">elif</span> cmd <span class="token operator">==</span> <span class="token string">"del"</span> <span class="token operator">or</span> cmd <span class="token operator">==</span> <span class="token string">"delete"</span> <span class="token operator">or</span> cmd <span class="token operator">==</span> <span class="token string">"remove"</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"You want to delete a commodity"</span><span class="token punctuation">)</span>        b<span class="token operator">=</span>input<span class="token punctuation">(</span><span class="token string">"Input Commodity Bar Code..."</span><span class="token punctuation">)</span>        o <span class="token operator">=</span> eval<span class="token punctuation">(</span>open<span class="token punctuation">(</span><span class="token string">"libray/shop.pkl"</span><span class="token punctuation">,</span> <span class="token string">"r"</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">"gbk"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> o<span class="token punctuation">:</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> b<span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Find!"</span><span class="token punctuation">,</span>i<span class="token punctuation">)</span>                o<span class="token punctuation">.</span>remove<span class="token punctuation">(</span>i<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Now,Remove Right..."</span><span class="token punctuation">)</span>        tobj <span class="token operator">=</span> prettytable<span class="token punctuation">.</span>PrettyTable<span class="token punctuation">(</span><span class="token punctuation">[</span>            <span class="token string">"Bar code"</span><span class="token punctuation">,</span>            <span class="token string">"Trade name"</span><span class="token punctuation">,</span>            <span class="token string">"Price(RMB)"</span>        <span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> o<span class="token punctuation">:</span>            tobj<span class="token punctuation">.</span>add_row<span class="token punctuation">(</span>i<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>tobj<span class="token punctuation">)</span>        obj <span class="token operator">=</span> open<span class="token punctuation">(</span><span class="token string">"libray/shop.pkl"</span><span class="token punctuation">,</span> <span class="token string">"w"</span><span class="token punctuation">)</span>        obj<span class="token punctuation">.</span>write<span class="token punctuation">(</span>str<span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">)</span>        obj<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"No such command!Please verify the input."</span><span class="token punctuation">)</span></code></pre><p><strong>main1.py</strong> 主程序</p><pre class=" language-python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"SHOP 1.0 COMMAND PROGRAM"</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">get</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">:</span>    o <span class="token operator">=</span> eval<span class="token punctuation">(</span>open<span class="token punctuation">(</span><span class="token string">"libray/shop.pkl"</span><span class="token punctuation">,</span> <span class="token string">"r"</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">"gbk"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> o<span class="token punctuation">:</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> b<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> i    <span class="token keyword">return</span> <span class="token boolean">False</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"input item times..."</span><span class="token punctuation">)</span>    t<span class="token operator">=</span>input<span class="token punctuation">(</span><span class="token string">"..."</span><span class="token punctuation">)</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>t <span class="token operator">==</span> None <span class="token operator">or</span> t <span class="token operator">==</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">break</span>    t<span class="token operator">=</span>int<span class="token punctuation">(</span>t<span class="token punctuation">)</span>    sum_<span class="token operator">=</span><span class="token number">0</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">:</span>        p<span class="token operator">=</span>get<span class="token punctuation">(</span>input<span class="token punctuation">(</span><span class="token string">"Bar code..."</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>p <span class="token operator">==</span> <span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Don't have this item"</span><span class="token punctuation">)</span>            <span class="token keyword">continue</span>        sum_<span class="token operator">=</span> sum_ <span class="token operator">+</span> int<span class="token punctuation">(</span>p<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>p<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">"RMB"</span><span class="token operator">+</span>p<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Sum is %d"</span><span class="token operator">%</span>sum_<span class="token punctuation">)</span></code></pre><p>详情请访问<a href="https://gitee.com/pybilly/shop" target="_blank" rel="noopener">我的码云仓库</a><br>下个项目再见，See you</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;python实践项目-shop&quot;&gt;&lt;a href=&quot;#python实践项目-shop&quot; class=&quot;headerlink&quot; title=&quot;python实践项目-shop&quot;&gt;&lt;/a&gt;python实践项目-shop&lt;/h2&gt;&lt;h2 id=&quot;练习&quot;&gt;&lt;a href=&quot;#练习&quot; class=&quot;headerlink&quot; title=&quot;练习&quot;&gt;&lt;/a&gt;练习&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;文件打开/保存&lt;/li&gt;
&lt;li&gt;cmd应用&lt;/li&gt;
&lt;li&gt;prettytable
    
    </summary>
    
    
      <category term="计算机" scheme="http://xiezheyuan.top/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
    
      <category term="python" scheme="http://xiezheyuan.top/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python 猿编程模块（一）ybc_speech</title>
    <link href="http://xiezheyuan.top/2019/10/06/python-ybc-module-ybcspeech/"/>
    <id>http://xiezheyuan.top/2019/10/06/python-ybc-module-ybcspeech/</id>
    <published>2019-10-05T16:00:00.000Z</published>
    <updated>2020-08-17T11:08:19.790Z</updated>
    
    <content type="html"><![CDATA[<p>首先先安装模块</p><pre class=" language-bash"><code class="language-bash">C:\Python36\python.exe -m pip <span class="token function">install</span> ybc-speech</code></pre><a id="more"></a><p><strong>record</strong>:录制音频</p><pre class=" language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">record</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span> seconds<span class="token operator">=</span>__SECONDS<span class="token punctuation">,</span> to_dir<span class="token operator">=</span>__TO_DIR<span class="token punctuation">,</span> rate<span class="token operator">=</span>__RATE<span class="token punctuation">,</span> channels<span class="token operator">=</span>__CHANNELS<span class="token punctuation">,</span> chunk<span class="token operator">=</span>__CHANNELS<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""    功能：录制音频文件。    参数 filename 是录制生成的语音文件的名字，    可选参数 seconds 是录制时长（单位：秒），默认 5 秒，    可选参数 to_dir 是存放语音文件的目录，默认为当前目录，    可选参数 rate 是录制采样率，1 代表 16000，0 代表 8000，默认为 1，    可选参数 channels 是声道，默认 1，    可选参数 chunk 是一次读取的字节数，默认 1024，    返回：录制的音频文件的路径。    """</span></code></pre><h5 id="示例："><a href="#示例：" class="headerlink" title="示例："></a>示例：</h5><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> ybc_speech <span class="token keyword">as</span> s<span class="token keyword">import</span> oss<span class="token punctuation">.</span>record<span class="token punctuation">(</span><span class="token string">"aaa.wav"</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span>os<span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string">"aaa.wav"</span><span class="token punctuation">)</span></code></pre><p><strong>voice2text</strong>:语音转文字</p><pre class=" language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">voice2text</span><span class="token punctuation">(</span>filename<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">,</span> rate<span class="token operator">=</span>__RATE<span class="token punctuation">,</span> format_type<span class="token operator">=</span>__FORMAT_TYPE<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""    功能：把语音文件转换成文字。    参数 filename 是当前目录下期望转换成文字的语音文件的名字，    可选参数 rate 是语音文件的采样率，1 代表 16000，0 代表 8000，默认为 1，    可选参数 format_type 是语音文件的类型，默认 PCM 格式，    返回：转换成的文字。    """</span></code></pre><h5 id="示例：-1"><a href="#示例：-1" class="headerlink" title="示例："></a>示例：</h5><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> ybc_speech <span class="token keyword">as</span> s<span class="token comment" spellcheck="true">#import os</span><span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>voice2text<span class="token punctuation">(</span><span class="token string">"aaa.wav"</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p><strong>text2voice</strong>:语音合成</p><pre class=" language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">text2voice</span><span class="token punctuation">(</span>text<span class="token punctuation">,</span> filename<span class="token punctuation">,</span> speaker<span class="token operator">=</span>__SPEAKER<span class="token punctuation">,</span> speed<span class="token operator">=</span>__SPEED<span class="token punctuation">,</span> aht<span class="token operator">=</span>__AHT<span class="token punctuation">,</span> apc<span class="token operator">=</span>__APC<span class="token punctuation">,</span> volume<span class="token operator">=</span>__VOLUME<span class="token punctuation">,</span> _format<span class="token operator">=</span>__FORMAT<span class="token punctuation">,</span> rate<span class="token operator">=</span>__RATE<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""    功能：把文字转换成语音。    参数 text 是待转换的文字，    参数 filename 是生成的语音文件的名字，    可选参数 speaker 是发音人，1 代表小刚（男声），2 代表小云（女声），默认为1，    可选参数 speed 是语速，1 代表正常速度，0.5 代表慢速，2 代表快速，默认为1，    可选参数 aht 是音高，默认为 0，    可选参数 apc 是音色，默认为 58，    可选参数 volume 是音量，默认为 100，    可选参数 _format 是语音文件的格式，1 代表 PCM，2 代表 WAV，3代表 MP3，默认为 2 ，    可选参数 rate 是语音采样率，1 代表 16000，0 代表 8000，默认为 1，    返回：生成的语音文件的名字。    """</span></code></pre><h5 id="示例：-2"><a href="#示例：-2" class="headerlink" title="示例："></a>示例：</h5><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> ybc_speech <span class="token keyword">as</span> s<span class="token keyword">import</span> oss<span class="token punctuation">.</span>text2voice<span class="token punctuation">(</span><span class="token string">"Hello"</span><span class="token punctuation">,</span><span class="token string">"hello.wav"</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>os<span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string">"hello.wav"</span><span class="token punctuation">)</span></code></pre><p><strong>speak</strong>:播放便捷函数</p><pre class=" language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">speak</span><span class="token punctuation">(</span>text<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">,</span> speaker<span class="token operator">=</span>__SPEAKER<span class="token punctuation">,</span> speed<span class="token operator">=</span>__SPEED<span class="token punctuation">,</span> aht<span class="token operator">=</span>__AHT<span class="token punctuation">,</span> apc<span class="token operator">=</span>__APC<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""    功能：朗读一段文字。    参数 text 是待朗读的文字，    可选参数 speaker 是发音人，1 代表小刚（男声），2 代表小云（女声），默认为1，    可选参数 speed 是语速，1 代表正常速度，0.5 代表慢速，2 代表快速，默认为1，    可选参数 aht 是音高，默认为 0，    可选参数 apc 是音色，默认为 58，    返回：无。    """</span></code></pre><p><strong>常量表</strong></p><pre class=" language-python"><code class="language-python">__RATE <span class="token operator">=</span> <span class="token number">16000</span>__FORMAT_TYPE <span class="token operator">=</span> <span class="token number">2</span>__SECONDS <span class="token operator">=</span> <span class="token number">5</span>__TO_DIR <span class="token operator">=</span> None__CHANNELS <span class="token operator">=</span> <span class="token number">1</span>__CHUNK <span class="token operator">=</span> <span class="token number">1024</span>__SPEAKER <span class="token operator">=</span> <span class="token number">1</span>__SPEED <span class="token operator">=</span> <span class="token number">1</span>__AHT <span class="token operator">=</span> <span class="token number">0</span>__APC <span class="token operator">=</span> <span class="token number">58</span>__VOLUME <span class="token operator">=</span> <span class="token number">100</span>__FORMAT <span class="token operator">=</span> <span class="token number">2</span></code></pre><p>首发于CSDN博客<a href="https://blog.csdn.net/pythonbilly" target="_blank" rel="noopener">https://blog.csdn.net/pythonbilly</a></p>]]></content>
    
    <summary type="html">
    
      猿编程模块 ybc_speech
    
    </summary>
    
    
      <category term="计算机" scheme="http://xiezheyuan.top/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
    
      <category term="python" scheme="http://xiezheyuan.top/tags/python/"/>
    
      <category term="猿编程" scheme="http://xiezheyuan.top/tags/%E7%8C%BF%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
</feed>
