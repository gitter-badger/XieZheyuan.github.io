[{"title":"1328：【例7.7】光荣的梦想题解","date":"2020-07-26T12:30:00.000Z","path":"2020/07/26/1328-dream-of-glory/","text":"题目：1328：【例7.7】光荣的梦想【题目描述】 Prince对他在这片大陆上维护的秩序感到满意，于是决定启程离开艾泽拉斯。在他动身之前，Prince决定赋予King_Bette最强大的能量以守护世界、保卫这里的平衡与和谐。在那个时代，平衡是个梦想。因为有很多奇异的物种拥有各种不稳定的能量，平衡瞬间即被打破。KB决定求助于你，帮助他完成这个梦想。 一串数列即表示一个世界的状态。 平衡是指这串数列以升序排列。而从一串无序数列到有序数列需要通过交换数列中的元素来实现。KB的能量只能交换相邻两个数字。他想知道他最少需要交换几次就能使数列有序。 【输入】 第一行为数列中数的个数n,第二行为n ≤ 10000个数。表示当前数列的状态。 【输出】 输出一个整数，表示最少需要交换几次能达到平衡状态。 【输入样例】 1242 1 4 3 【输出样例】 12 题解：Linux风格C++代码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263#include&lt;iostream&gt;#include&lt;cstring&gt;using namespace std;int source[10005];int ed[10005];int n;int ans;void px(int start=0,int end=n-1)&#123; if(end-start&lt;=0) &#123; return; &#125; int mid = (start+end)/2; px(start, mid); px(mid+1, end); int i=start,j=mid+1,cnt=start; while(i&lt;=mid&amp;&amp;j&lt;=end) &#123; if(source[i]&lt;=source[j]) &#123; ed[cnt]=source[i]; i++; &#125; else &#123; ans+=(mid+1-i); ed[cnt]=source[j]; j++; &#125; cnt++; &#125; if(i&lt;=mid) &#123; for(int k=0; k&lt;=(mid-i); k++) &#123; ed[cnt+k]=source[i+k]; &#125; &#125; if(j&lt;=end) &#123; for(int l=0; l&lt;=(end-j); l++) &#123; ed[cnt+l]=source[j+l]; &#125; &#125; while(i&lt;=mid) &#123; ed[cnt++]=source[i++]; &#125; while(j&lt;=end) &#123; ed[cnt++]=source[j++]; &#125; for(int i=start; i&lt;=end; i++) &#123; source[i]=ed[i]; &#125;&#125;int main()&#123; cin&gt;&gt;n; for(int i=0; i&lt;n; i++) &#123; cin&gt;&gt;source[i]; &#125; px(); cout&lt;&lt;ans; return 0;&#125; Allman风格12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576#include&lt;iostream&gt;#include&lt;cstring&gt;using namespace std;int source[10005];int ed[10005];int n;int ans;void px(int start=0,int end=n-1)&#123; if(end-start&lt;=0) &#123; return; &#125; int mid = (start+end)/2; px(start, mid); px(mid+1, end); int i=start,j=mid+1,cnt=start; while(i&lt;=mid&amp;&amp;j&lt;=end) &#123; if(source[i]&lt;=source[j]) &#123; ed[cnt]=source[i]; i++; &#125; else &#123; ans+=(mid+1-i); ed[cnt]=source[j]; j++; &#125; cnt++; &#125; if(i&lt;=mid) &#123; for(int k=0; k&lt;=(mid-i); k++) &#123; ed[cnt+k]=source[i+k]; &#125; &#125; if(j&lt;=end) &#123; for(int l=0; l&lt;=(end-j); l++) &#123; ed[cnt+l]=source[j+l]; &#125; &#125; while(i&lt;=mid) &#123; ed[cnt++]=source[i++]; &#125; while(j&lt;=end) &#123; ed[cnt++]=source[j++]; &#125; for(int i=start; i&lt;=end; i++) &#123; source[i]=ed[i]; &#125;&#125;int main()&#123; cin&gt;&gt;n; for(int i=0; i&lt;n; i++) &#123; cin&gt;&gt;source[i]; &#125; px(); cout&lt;&lt;ans; return 0;&#125; Java风格12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061#include&lt;iostream&gt;#include&lt;cstring&gt;using namespace std;int source[10005];int ed[10005];int n;int ans;void px(int start=0,int end=n-1) &#123; if(end-start&lt;=0) &#123; return; &#125; int mid = (start+end)/2; px(start, mid); px(mid+1, end); int i=start,j=mid+1,cnt=start; while(i&lt;=mid&amp;&amp;j&lt;=end) &#123; if(source[i]&lt;=source[j]) &#123; ed[cnt]=source[i]; i++; &#125; else &#123; ans+=(mid+1-i); ed[cnt]=source[j]; j++; &#125; cnt++; &#125; if(i&lt;=mid) &#123; for(int k=0; k&lt;=(mid-i); k++) &#123; ed[cnt+k]=source[i+k]; &#125; &#125; if(j&lt;=end) &#123; for(int l=0; l&lt;=(end-j); l++) &#123; ed[cnt+l]=source[j+l]; &#125; &#125; while(i&lt;=mid) &#123; ed[cnt++]=source[i++]; &#125; while(j&lt;=end) &#123; ed[cnt++]=source[j++]; &#125; for(int i=start; i&lt;=end; i++) &#123; source[i]=ed[i]; &#125;&#125;int main() &#123; cin&gt;&gt;n; for(int i=0; i&lt;n; i++) &#123; cin&gt;&gt;source[i]; &#125; px(); cout&lt;&lt;ans; return 0;&#125; GNU风格12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576#include&lt;iostream&gt;#include&lt;cstring&gt;using namespace std;int source[10005];int ed[10005];int n;int ans;void px(int start=0,int end=n-1)&#123; if(end-start&lt;=0) &#123; return; &#125; int mid = (start+end)/2; px(start, mid); px(mid+1, end); int i=start,j=mid+1,cnt=start; while(i&lt;=mid&amp;&amp;j&lt;=end) &#123; if(source[i]&lt;=source[j]) &#123; ed[cnt]=source[i]; i++; &#125; else &#123; ans+=(mid+1-i); ed[cnt]=source[j]; j++; &#125; cnt++; &#125; if(i&lt;=mid) &#123; for(int k=0; k&lt;=(mid-i); k++) &#123; ed[cnt+k]=source[i+k]; &#125; &#125; if(j&lt;=end) &#123; for(int l=0; l&lt;=(end-j); l++) &#123; ed[cnt+l]=source[j+l]; &#125; &#125; while(i&lt;=mid) &#123; ed[cnt++]=source[i++]; &#125; while(j&lt;=end) &#123; ed[cnt++]=source[j++]; &#125; for(int i=start; i&lt;=end; i++) &#123; source[i]=ed[i]; &#125;&#125;int main()&#123; cin&gt;&gt;n; for(int i=0; i&lt;n; i++) &#123; cin&gt;&gt;source[i]; &#125; px(); cout&lt;&lt;ans; return 0;&#125;","raw":"title: 1328：【例7.7】光荣的梦想题解\nauthor: Xie Zheyuan\ntags:\n  - C\n  - 信息学奥赛一本通\ncategories: []\ndate: 2020-07-26 20:30:00\n---\n<style src=\"/blogimages/ybt.css\" type=\"text/css\"></style>\n\n# 题目：\n\n<td class=\"pcontent\"><center><h3>1328：【例7.7】光荣的梦想</h3></center><font size=3><h3>【题目描述】</h3>\n<div class=xxbox><p>Prince对他在这片大陆上维护的秩序感到满意，于是决定启程离开艾泽拉斯。在他动身之前，Prince决定赋予King_Bette最强大的能量以守护世界、保卫这里的平衡与和谐。在那个时代，平衡是个梦想。因为有很多奇异的物种拥有各种不稳定的能量，平衡瞬间即被打破。KB决定求助于你，帮助他完成这个梦想。 </p>\n<p>一串数列即表示一个世界的状态。 </p>\n<p>平衡是指这串数列以升序排列。而从一串无序数列到有序数列需要通过交换数列中的元素来实现。KB的能量只能交换相邻两个数字。他想知道他最少需要交换几次就能使数列有序。</p>\n</div>\n<h3>【输入】</h3>\n<div class=xxbox><p>第一行为数列中数的个数n,第二行为n ≤ 10000个数。表示当前数列的状态。</p>\n</div><h3>【输出】</h3>\n<div class=xxbox><p>输出一个整数，表示最少需要交换几次能达到平衡状态。</p>\n</div><h3>【输入样例】</h3>\n```\n4\n2 1 4 3```\n<font size=3><h3>【输出样例】</h3>\n```\n2\n```\n<!--more--> \n\n# 题解：\n## Linux风格C++代码\n```c\n#include<iostream>\n#include<cstring>\nusing namespace std;\nint source[10005];\nint ed[10005];\nint n;\nint ans;\nvoid px(int start=0,int end=n-1)\n{\n\n\tif(end-start<=0) {\n\t\treturn;\n\t}\n\n\tint mid = (start+end)/2;\n\tpx(start, mid);\n\tpx(mid+1, end);\n\tint i=start,j=mid+1,cnt=start;\n\twhile(i<=mid&&j<=end) {\n\t\tif(source[i]<=source[j]) {\n\t\t\ted[cnt]=source[i];\n\t\t\ti++;\n\t\t} else {\n\t\t\tans+=(mid+1-i);\n\t\t\ted[cnt]=source[j];\n\t\t\tj++;\n\t\t}\n\n\n\t\tcnt++;\n\t}\n\tif(i<=mid) {\n\t\tfor(int k=0; k<=(mid-i); k++) {\n\t\t\ted[cnt+k]=source[i+k];\n\n\t\t}\n\t}\n\tif(j<=end) {\n\t\tfor(int l=0; l<=(end-j); l++) {\n\t\t\ted[cnt+l]=source[j+l];\n\n\t\t}\n\t}\n\twhile(i<=mid) {\n\t\ted[cnt++]=source[i++];\n\t}\n\twhile(j<=end) {\n\t\ted[cnt++]=source[j++];\n\t}\n\tfor(int i=start; i<=end; i++) {\n\t\tsource[i]=ed[i];\n\t}\n}\nint main()\n{\n\tcin>>n;\n\tfor(int i=0; i<n; i++) {\n\t\tcin>>source[i];\n\t}\n\tpx();\n\tcout<<ans;\n\treturn 0;\n}\n\n\n```\n## Allman风格\n```c\n#include<iostream>\n#include<cstring>\nusing namespace std;\nint source[10005];\nint ed[10005];\nint n;\nint ans;\nvoid px(int start=0,int end=n-1)\n{\n\n\tif(end-start<=0)\n\t{\n\t\treturn;\n\t}\n\n\tint mid = (start+end)/2;\n\tpx(start, mid);\n\tpx(mid+1, end);\n\tint i=start,j=mid+1,cnt=start;\n\twhile(i<=mid&&j<=end)\n\t{\n\t\tif(source[i]<=source[j])\n\t\t{\n\t\t\ted[cnt]=source[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tans+=(mid+1-i);\n\t\t\ted[cnt]=source[j];\n\t\t\tj++;\n\t\t}\n\n\n\t\tcnt++;\n\t}\n\tif(i<=mid)\n\t{\n\t\tfor(int k=0; k<=(mid-i); k++)\n\t\t{\n\t\t\ted[cnt+k]=source[i+k];\n\n\t\t}\n\t}\n\tif(j<=end)\n\t{\n\t\tfor(int l=0; l<=(end-j); l++)\n\t\t{\n\t\t\ted[cnt+l]=source[j+l];\n\n\t\t}\n\t}\n\twhile(i<=mid)\n\t{\n\t\ted[cnt++]=source[i++];\n\t}\n\twhile(j<=end)\n\t{\n\t\ted[cnt++]=source[j++];\n\t}\n\tfor(int i=start; i<=end; i++)\n\t{\n\t\tsource[i]=ed[i];\n\t}\n}\nint main()\n{\n\tcin>>n;\n\tfor(int i=0; i<n; i++)\n\t{\n\t\tcin>>source[i];\n\t}\n\tpx();\n\tcout<<ans;\n\treturn 0;\n}\n\n\n```\n\n## Java风格\n```c\n#include<iostream>\n#include<cstring>\nusing namespace std;\nint source[10005];\nint ed[10005];\nint n;\nint ans;\nvoid px(int start=0,int end=n-1) {\n\n\tif(end-start<=0) {\n\t\treturn;\n\t}\n\n\tint mid = (start+end)/2;\n\tpx(start, mid);\n\tpx(mid+1, end);\n\tint i=start,j=mid+1,cnt=start;\n\twhile(i<=mid&&j<=end) {\n\t\tif(source[i]<=source[j]) {\n\t\t\ted[cnt]=source[i];\n\t\t\ti++;\n\t\t} else {\n\t\t\tans+=(mid+1-i);\n\t\t\ted[cnt]=source[j];\n\t\t\tj++;\n\t\t}\n\n\n\t\tcnt++;\n\t}\n\tif(i<=mid) {\n\t\tfor(int k=0; k<=(mid-i); k++) {\n\t\t\ted[cnt+k]=source[i+k];\n\n\t\t}\n\t}\n\tif(j<=end) {\n\t\tfor(int l=0; l<=(end-j); l++) {\n\t\t\ted[cnt+l]=source[j+l];\n\n\t\t}\n\t}\n\twhile(i<=mid) {\n\t\ted[cnt++]=source[i++];\n\t}\n\twhile(j<=end) {\n\t\ted[cnt++]=source[j++];\n\t}\n\tfor(int i=start; i<=end; i++) {\n\t\tsource[i]=ed[i];\n\t}\n}\nint main() {\n\tcin>>n;\n\tfor(int i=0; i<n; i++) {\n\t\tcin>>source[i];\n\t}\n\tpx();\n\tcout<<ans;\n\treturn 0;\n}\n\n```\n## GNU风格\n```c\n#include<iostream>\n#include<cstring>\nusing namespace std;\nint source[10005];\nint ed[10005];\nint n;\nint ans;\nvoid px(int start=0,int end=n-1)\n{\n\n\tif(end-start<=0)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\tint mid = (start+end)/2;\n\tpx(start, mid);\n\tpx(mid+1, end);\n\tint i=start,j=mid+1,cnt=start;\n\twhile(i<=mid&&j<=end)\n\t\t{\n\t\t\tif(source[i]<=source[j])\n\t\t\t\t{\n\t\t\t\t\ted[cnt]=source[i];\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tans+=(mid+1-i);\n\t\t\t\t\ted[cnt]=source[j];\n\t\t\t\t\tj++;\n\t\t\t\t}\n\n\n\t\t\tcnt++;\n\t\t}\n\tif(i<=mid)\n\t\t{\n\t\t\tfor(int k=0; k<=(mid-i); k++)\n\t\t\t\t{\n\t\t\t\t\ted[cnt+k]=source[i+k];\n\n\t\t\t\t}\n\t\t}\n\tif(j<=end)\n\t\t{\n\t\t\tfor(int l=0; l<=(end-j); l++)\n\t\t\t\t{\n\t\t\t\t\ted[cnt+l]=source[j+l];\n\n\t\t\t\t}\n\t\t}\n\twhile(i<=mid)\n\t\t{\n\t\t\ted[cnt++]=source[i++];\n\t\t}\n\twhile(j<=end)\n\t\t{\n\t\t\ted[cnt++]=source[j++];\n\t\t}\n\tfor(int i=start; i<=end; i++)\n\t\t{\n\t\t\tsource[i]=ed[i];\n\t\t}\n}\nint main()\n{\n\tcin>>n;\n\tfor(int i=0; i<n; i++)\n\t\t{\n\t\t\tcin>>source[i];\n\t\t}\n\tpx();\n\tcout<<ans;\n\treturn 0;\n}\n\n```\n\n![用户名:xiezheyuan，题目编号:1328，运行编号:7757442，代码长度:906Bytes\n通过](/blogimages/1328-cpp-judge-answer.png)\n","content":"<style src=\"/blogimages/ybt.css\" type=\"text/css\"></style>\n\n<h1 id=\"题目：\"><a href=\"#题目：\" class=\"headerlink\" title=\"题目：\"></a>题目：</h1><td class=\"pcontent\"><center><h3>1328：【例7.7】光荣的梦想</h3></center><font size=3><h3>【题目描述】</h3>\n<div class=xxbox><p>Prince对他在这片大陆上维护的秩序感到满意，于是决定启程离开艾泽拉斯。在他动身之前，Prince决定赋予King_Bette最强大的能量以守护世界、保卫这里的平衡与和谐。在那个时代，平衡是个梦想。因为有很多奇异的物种拥有各种不稳定的能量，平衡瞬间即被打破。KB决定求助于你，帮助他完成这个梦想。 </p>\n<p>一串数列即表示一个世界的状态。 </p>\n<p>平衡是指这串数列以升序排列。而从一串无序数列到有序数列需要通过交换数列中的元素来实现。KB的能量只能交换相邻两个数字。他想知道他最少需要交换几次就能使数列有序。</p>\n</div>\n<h3>【输入】</h3>\n<div class=xxbox><p>第一行为数列中数的个数n,第二行为n ≤ 10000个数。表示当前数列的状态。</p>\n</div><h3>【输出】</h3>\n<div class=xxbox><p>输出一个整数，表示最少需要交换几次能达到平衡状态。</p>\n</div><h3>【输入样例】</h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">4</span><br><span class=\"line\">2 1 4 3</span><br></pre></td></tr></table></figure>\n<font size=3><h3>【输出样例】</h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a> \n\n<h1 id=\"题解：\"><a href=\"#题解：\" class=\"headerlink\" title=\"题解：\"></a>题解：</h1><h2 id=\"Linux风格C-代码\"><a href=\"#Linux风格C-代码\" class=\"headerlink\" title=\"Linux风格C++代码\"></a>Linux风格C++代码</h2><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> source[<span class=\"number\">10005</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> ed[<span class=\"number\">10005</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> n;</span><br><span class=\"line\"><span class=\"keyword\">int</span> ans;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">px</span><span class=\"params\">(<span class=\"keyword\">int</span> start=<span class=\"number\">0</span>,<span class=\"keyword\">int</span> <span class=\"built_in\">end</span>=n<span class=\"number\">-1</span>)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(<span class=\"built_in\">end</span>-start&lt;=<span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> mid = (start+<span class=\"built_in\">end</span>)/<span class=\"number\">2</span>;</span><br><span class=\"line\">\tpx(start, mid);</span><br><span class=\"line\">\tpx(mid+<span class=\"number\">1</span>, <span class=\"built_in\">end</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> i=start,j=mid+<span class=\"number\">1</span>,cnt=start;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(i&lt;=mid&amp;&amp;j&lt;=<span class=\"built_in\">end</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(source[i]&lt;=source[j]) &#123;</span><br><span class=\"line\">\t\t\ted[cnt]=source[i];</span><br><span class=\"line\">\t\t\ti++;</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\tans+=(mid+<span class=\"number\">1</span>-i);</span><br><span class=\"line\">\t\t\ted[cnt]=source[j];</span><br><span class=\"line\">\t\t\tj++;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t\tcnt++;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(i&lt;=mid) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k=<span class=\"number\">0</span>; k&lt;=(mid-i); k++) &#123;</span><br><span class=\"line\">\t\t\ted[cnt+k]=source[i+k];</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(j&lt;=<span class=\"built_in\">end</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> l=<span class=\"number\">0</span>; l&lt;=(<span class=\"built_in\">end</span>-j); l++) &#123;</span><br><span class=\"line\">\t\t\ted[cnt+l]=source[j+l];</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(i&lt;=mid) &#123;</span><br><span class=\"line\">\t\ted[cnt++]=source[i++];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(j&lt;=<span class=\"built_in\">end</span>) &#123;</span><br><span class=\"line\">\t\ted[cnt++]=source[j++];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=start; i&lt;=<span class=\"built_in\">end</span>; i++) &#123;</span><br><span class=\"line\">\t\tsource[i]=ed[i];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span>&gt;&gt;n;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt;n; i++) &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cin</span>&gt;&gt;source[i];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tpx();</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;ans;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Allman风格\"><a href=\"#Allman风格\" class=\"headerlink\" title=\"Allman风格\"></a>Allman风格</h2><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> source[<span class=\"number\">10005</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> ed[<span class=\"number\">10005</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> n;</span><br><span class=\"line\"><span class=\"keyword\">int</span> ans;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">px</span><span class=\"params\">(<span class=\"keyword\">int</span> start=<span class=\"number\">0</span>,<span class=\"keyword\">int</span> <span class=\"built_in\">end</span>=n<span class=\"number\">-1</span>)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(<span class=\"built_in\">end</span>-start&lt;=<span class=\"number\">0</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> mid = (start+<span class=\"built_in\">end</span>)/<span class=\"number\">2</span>;</span><br><span class=\"line\">\tpx(start, mid);</span><br><span class=\"line\">\tpx(mid+<span class=\"number\">1</span>, <span class=\"built_in\">end</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> i=start,j=mid+<span class=\"number\">1</span>,cnt=start;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(i&lt;=mid&amp;&amp;j&lt;=<span class=\"built_in\">end</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(source[i]&lt;=source[j])</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\ted[cnt]=source[i];</span><br><span class=\"line\">\t\t\ti++;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tans+=(mid+<span class=\"number\">1</span>-i);</span><br><span class=\"line\">\t\t\ted[cnt]=source[j];</span><br><span class=\"line\">\t\t\tj++;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t\tcnt++;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(i&lt;=mid)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k=<span class=\"number\">0</span>; k&lt;=(mid-i); k++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\ted[cnt+k]=source[i+k];</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(j&lt;=<span class=\"built_in\">end</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> l=<span class=\"number\">0</span>; l&lt;=(<span class=\"built_in\">end</span>-j); l++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\ted[cnt+l]=source[j+l];</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(i&lt;=mid)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\ted[cnt++]=source[i++];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(j&lt;=<span class=\"built_in\">end</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\ted[cnt++]=source[j++];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=start; i&lt;=<span class=\"built_in\">end</span>; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tsource[i]=ed[i];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span>&gt;&gt;n;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt;n; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cin</span>&gt;&gt;source[i];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tpx();</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;ans;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Java风格\"><a href=\"#Java风格\" class=\"headerlink\" title=\"Java风格\"></a>Java风格</h2><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> source[<span class=\"number\">10005</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> ed[<span class=\"number\">10005</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> n;</span><br><span class=\"line\"><span class=\"keyword\">int</span> ans;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">px</span><span class=\"params\">(<span class=\"keyword\">int</span> start=<span class=\"number\">0</span>,<span class=\"keyword\">int</span> <span class=\"built_in\">end</span>=n<span class=\"number\">-1</span>)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(<span class=\"built_in\">end</span>-start&lt;=<span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> mid = (start+<span class=\"built_in\">end</span>)/<span class=\"number\">2</span>;</span><br><span class=\"line\">\tpx(start, mid);</span><br><span class=\"line\">\tpx(mid+<span class=\"number\">1</span>, <span class=\"built_in\">end</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> i=start,j=mid+<span class=\"number\">1</span>,cnt=start;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(i&lt;=mid&amp;&amp;j&lt;=<span class=\"built_in\">end</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(source[i]&lt;=source[j]) &#123;</span><br><span class=\"line\">\t\t\ted[cnt]=source[i];</span><br><span class=\"line\">\t\t\ti++;</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\tans+=(mid+<span class=\"number\">1</span>-i);</span><br><span class=\"line\">\t\t\ted[cnt]=source[j];</span><br><span class=\"line\">\t\t\tj++;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t\tcnt++;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(i&lt;=mid) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k=<span class=\"number\">0</span>; k&lt;=(mid-i); k++) &#123;</span><br><span class=\"line\">\t\t\ted[cnt+k]=source[i+k];</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(j&lt;=<span class=\"built_in\">end</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> l=<span class=\"number\">0</span>; l&lt;=(<span class=\"built_in\">end</span>-j); l++) &#123;</span><br><span class=\"line\">\t\t\ted[cnt+l]=source[j+l];</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(i&lt;=mid) &#123;</span><br><span class=\"line\">\t\ted[cnt++]=source[i++];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(j&lt;=<span class=\"built_in\">end</span>) &#123;</span><br><span class=\"line\">\t\ted[cnt++]=source[j++];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=start; i&lt;=<span class=\"built_in\">end</span>; i++) &#123;</span><br><span class=\"line\">\t\tsource[i]=ed[i];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span>&gt;&gt;n;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt;n; i++) &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cin</span>&gt;&gt;source[i];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tpx();</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;ans;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"GNU风格\"><a href=\"#GNU风格\" class=\"headerlink\" title=\"GNU风格\"></a>GNU风格</h2><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> source[<span class=\"number\">10005</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> ed[<span class=\"number\">10005</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> n;</span><br><span class=\"line\"><span class=\"keyword\">int</span> ans;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">px</span><span class=\"params\">(<span class=\"keyword\">int</span> start=<span class=\"number\">0</span>,<span class=\"keyword\">int</span> <span class=\"built_in\">end</span>=n<span class=\"number\">-1</span>)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(<span class=\"built_in\">end</span>-start&lt;=<span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> mid = (start+<span class=\"built_in\">end</span>)/<span class=\"number\">2</span>;</span><br><span class=\"line\">\tpx(start, mid);</span><br><span class=\"line\">\tpx(mid+<span class=\"number\">1</span>, <span class=\"built_in\">end</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> i=start,j=mid+<span class=\"number\">1</span>,cnt=start;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(i&lt;=mid&amp;&amp;j&lt;=<span class=\"built_in\">end</span>)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(source[i]&lt;=source[j])</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\ted[cnt]=source[i];</span><br><span class=\"line\">\t\t\t\t\ti++;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\tans+=(mid+<span class=\"number\">1</span>-i);</span><br><span class=\"line\">\t\t\t\t\ted[cnt]=source[j];</span><br><span class=\"line\">\t\t\t\t\tj++;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tcnt++;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(i&lt;=mid)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k=<span class=\"number\">0</span>; k&lt;=(mid-i); k++)</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\ted[cnt+k]=source[i+k];</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(j&lt;=<span class=\"built_in\">end</span>)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> l=<span class=\"number\">0</span>; l&lt;=(<span class=\"built_in\">end</span>-j); l++)</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\ted[cnt+l]=source[j+l];</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(i&lt;=mid)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\ted[cnt++]=source[i++];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(j&lt;=<span class=\"built_in\">end</span>)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\ted[cnt++]=source[j++];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=start; i&lt;=<span class=\"built_in\">end</span>; i++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tsource[i]=ed[i];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span>&gt;&gt;n;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt;n; i++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">cin</span>&gt;&gt;source[i];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\tpx();</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;ans;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/blogimages/1328-cpp-judge-answer.png\" alt=\"用户名:xiezheyuan，题目编号:1328，运行编号:7757442，代码长度:906Bytes\n通过\"></p>\n","tags":[{"name":"信息学奥赛一本通","slug":"信息学奥赛一本通","permalink":"http://xiezheyuan.top/tags/%E4%BF%A1%E6%81%AF%E5%AD%A6%E5%A5%A5%E8%B5%9B%E4%B8%80%E6%9C%AC%E9%80%9A/"},{"name":"C","slug":"C","permalink":"http://xiezheyuan.top/tags/C/"}]},{"title":"Python经验帖——pyinstaller","date":"2020-07-12T13:12:28.000Z","path":"2020/07/12/pythonexp-pyinstaller/","text":"PyInstaller介绍PyInstaller是一个简单的python编译程序，可以把py 源文件编译成 exe 可执行文件（据说还可以变成.app等，但没有亲测过） PyInstaller安装直接运行pip命令即可 123python -m pip install pyinstaller //Windows/MS-DOSpip install pyinstaller //Liunx/Unixpip3 install pyinstaller //Mac 注：如果下载过慢或超时(Timeout)那么可以选择清华镜像，详细参考 让python pip使用国内镜像(Cnblog) PyInstaller使用写一个python程序1.py 1print(\"Hello World\") strong text 尝试编译1python -m PyInstaller 1.py 会生成dist目录，dist目录下有1目录，里面就是所有文件 其他-w生成GUI程序（无CMD窗口） -F生成单个文件 -i [ico]加图标（很有用）","raw":"title: Python经验帖——pyinstaller\ntags:\n  - 计算机\n  - python\n  - pyinstaller\ndescription: PyInstaller是一个简单的python编译程序\ndate: 2020-07-12 21:12:28\n---\n# PyInstaller介绍\n\nPyInstaller是一个简单的python编译程序，可以把**py** 源文件编译成 **exe** 可执行文件（据说还可以变成.app等，但没有亲测过）\n<!--more-->\n# PyInstaller安装\n\n直接运行pip命令即可\n\n```powershell\npython -m pip install pyinstaller //Windows/MS-DOS\npip install pyinstaller //Liunx/Unix\npip3 install pyinstaller //Mac\n```\n\n> 注：如果下载过慢或超时(Timeout)那么可以选择清华镜像，详细参考 [让python pip使用国内镜像(Cnblog)](https://www.cnblogs.com/wqpkita/p/7248525.html)\n\n\n# PyInstaller使用\n\n## 写一个python程序\n\n1.py\n```python\nprint(\"Hello World\")\n```\n**strong text**\n## 尝试编译\n```powershell\npython -m PyInstaller 1.py\n```\n会生成dist目录，dist目录下有1目录，里面就是所有文件\n\n## 其他\n\n### -w\n\n生成GUI程序（无CMD窗口）\n\n### -F\n\n生成单个文件\n\n### -i [ico]\n\n加图标（很有用）","content":"<h1 id=\"PyInstaller介绍\"><a href=\"#PyInstaller介绍\" class=\"headerlink\" title=\"PyInstaller介绍\"></a>PyInstaller介绍</h1><p>PyInstaller是一个简单的python编译程序，可以把<strong>py</strong> 源文件编译成 <strong>exe</strong> 可执行文件（据说还可以变成.app等，但没有亲测过）</p>\n<a id=\"more\"></a>\n<h1 id=\"PyInstaller安装\"><a href=\"#PyInstaller安装\" class=\"headerlink\" title=\"PyInstaller安装\"></a>PyInstaller安装</h1><p>直接运行pip命令即可</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python <span class=\"literal\">-m</span> pip install pyinstaller //Windows/MS<span class=\"literal\">-DOS</span></span><br><span class=\"line\">pip install pyinstaller //Liunx/Unix</span><br><span class=\"line\">pip3 install pyinstaller //Mac</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>注：如果下载过慢或超时(Timeout)那么可以选择清华镜像，详细参考 <a href=\"https://www.cnblogs.com/wqpkita/p/7248525.html\" target=\"_blank\" rel=\"noopener\">让python pip使用国内镜像(Cnblog)</a></p>\n</blockquote>\n<h1 id=\"PyInstaller使用\"><a href=\"#PyInstaller使用\" class=\"headerlink\" title=\"PyInstaller使用\"></a>PyInstaller使用</h1><h2 id=\"写一个python程序\"><a href=\"#写一个python程序\" class=\"headerlink\" title=\"写一个python程序\"></a>写一个python程序</h2><p>1.py</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(<span class=\"string\">\"Hello World\"</span>)</span><br></pre></td></tr></table></figure>\n<p><strong>strong text</strong></p>\n<h2 id=\"尝试编译\"><a href=\"#尝试编译\" class=\"headerlink\" title=\"尝试编译\"></a>尝试编译</h2><figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python <span class=\"literal\">-m</span> PyInstaller <span class=\"number\">1</span>.py</span><br></pre></td></tr></table></figure>\n<p>会生成dist目录，dist目录下有1目录，里面就是所有文件</p>\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><h3 id=\"w\"><a href=\"#w\" class=\"headerlink\" title=\"-w\"></a>-w</h3><p>生成GUI程序（无CMD窗口）</p>\n<h3 id=\"F\"><a href=\"#F\" class=\"headerlink\" title=\"-F\"></a>-F</h3><p>生成单个文件</p>\n<h3 id=\"i-ico\"><a href=\"#i-ico\" class=\"headerlink\" title=\"-i [ico]\"></a>-i [ico]</h3><p>加图标（很有用）</p>\n","tags":[{"name":"计算机","slug":"计算机","permalink":"http://xiezheyuan.top/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/"},{"name":"python","slug":"python","permalink":"http://xiezheyuan.top/tags/python/"},{"name":"pyinstaller","slug":"pyinstaller","permalink":"http://xiezheyuan.top/tags/pyinstaller/"}]},{"title":"1326：【例7.5】 取余运算（mod）答案","date":"2020-07-05T11:54:00.000Z","path":"2020/07/05/1326-mod-answer/","text":"题目：点击查看 初次解（有错）123456789101112131415161718#include&lt;iostream&gt;#include&lt;cmath&gt;using namespace std;typedef long long int lli;lli b,p,k;lli pow_(lli a, lli b)&#123; lli ans=1; for(int i=1;i&lt;b;i++) &#123; ans *= i; &#125; return ans;&#125; int main()&#123; cin&gt;&gt;b&gt;&gt;p&gt;&gt;k; lli ans = pow(b, p) % k; cout&lt;&lt;ans; return 0;&#125; 错误分析pow太大，无法写入内存 答案12345678910111213141516171819202122232425#include&lt;iostream&gt;#include&lt;algorithm&gt;#include&lt;math.h&gt;#include&lt;stdio.h&gt;typedef long long int ll;using namespace std;ll digui(ll b,ll p,ll k)&#123; if(p==0) return 1; ll re=digui(b,p/2,k); re = (re * re)% k; if(p%2) &#123; re= (re*b)%k; &#125; return re; &#125; int main()&#123; ll b,p,k;cin&gt;&gt;b&gt;&gt;p&gt;&gt;k; printf(\"%lld^%lld mod %lld=%lld\",b,p,k,digui(b,p,k)); return 0;&#125;","raw":"title: 1326：【例7.5】 取余运算（mod）答案\nauthor: Xie Zheyuan\ntags:\n  - C++\n  - 信息学奥赛一本通\ncategories: []\ndate: 2020-07-05 19:54:00\n---\n# 题目：\n[点击查看](http://ybt.ssoier.cn:8088/problem_show.php?pid=1326)\n<!--more-->\n\n# 初次解（有错）\n```cpp\n#include<iostream>\n#include<cmath>\nusing namespace std;\ntypedef long long int lli;\nlli b,p,k;\nlli pow_(lli a, lli b){\n\tlli ans=1;\n\tfor(int i=1;i<b;i++) {\n\t\tans *= i;\n\t}\n\treturn ans;\n} \nint main(){\n\tcin>>b>>p>>k;\n\tlli ans = pow(b, p) % k;\n\tcout<<ans;\n\treturn 0;\n}\n\n\n```\n\n#### 错误分析\npow**太大**，无法写入内存\n\n\n# 答案\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<math.h>\n#include<stdio.h>\ntypedef long long int ll;\nusing namespace std;\nll digui(ll b,ll p,ll k)\n{\n\tif(p==0)\n\t\treturn 1;\n\tll re=digui(b,p/2,k);\n\tre = (re * re)% k;\n\tif(p%2)\n\t{\n\t\tre= (re*b)%k;\n\t}\n\treturn re;\n\t\n} \nint main()\n{\n\tll b,p,k;cin>>b>>p>>k;\n\tprintf(\"%lld^%lld mod %lld=%lld\",b,p,k,digui(b,p,k));\n\treturn 0;\n}\n\n```","content":"<h1 id=\"题目：\"><a href=\"#题目：\" class=\"headerlink\" title=\"题目：\"></a>题目：</h1><p><a href=\"http://ybt.ssoier.cn:8088/problem_show.php?pid=1326\" target=\"_blank\" rel=\"noopener\">点击查看</a></p>\n<a id=\"more\"></a>\n\n<h1 id=\"初次解（有错）\"><a href=\"#初次解（有错）\" class=\"headerlink\" title=\"初次解（有错）\"></a>初次解（有错）</h1><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cmath&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> <span class=\"keyword\">int</span> lli;</span><br><span class=\"line\">lli b,p,k;</span><br><span class=\"line\"><span class=\"function\">lli <span class=\"title\">pow_</span><span class=\"params\">(lli a, lli b)</span></span>&#123;</span><br><span class=\"line\">\tlli ans=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;b;i++) &#123;</span><br><span class=\"line\">\t\tans *= i;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">&#125; </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span>&gt;&gt;b&gt;&gt;p&gt;&gt;k;</span><br><span class=\"line\">\tlli ans = <span class=\"built_in\">pow</span>(b, p) % k;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;ans;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"错误分析\"><a href=\"#错误分析\" class=\"headerlink\" title=\"错误分析\"></a>错误分析</h4><p>pow<strong>太大</strong>，无法写入内存</p>\n<h1 id=\"答案\"><a href=\"#答案\" class=\"headerlink\" title=\"答案\"></a>答案</h1><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;math.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> <span class=\"keyword\">int</span> ll;</span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"function\">ll <span class=\"title\">digui</span><span class=\"params\">(ll b,ll p,ll k)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(p==<span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">\tll re=digui(b,p/<span class=\"number\">2</span>,k);</span><br><span class=\"line\">\tre = (re * re)% k;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(p%<span class=\"number\">2</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tre= (re*b)%k;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> re;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&#125; </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tll b,p,k;<span class=\"built_in\">cin</span>&gt;&gt;b&gt;&gt;p&gt;&gt;k;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%lld^%lld mod %lld=%lld\"</span>,b,p,k,digui(b,p,k));</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","tags":[{"name":"C++","slug":"C","permalink":"http://xiezheyuan.top/tags/C/"},{"name":"信息学奥赛一本通","slug":"信息学奥赛一本通","permalink":"http://xiezheyuan.top/tags/%E4%BF%A1%E6%81%AF%E5%AD%A6%E5%A5%A5%E8%B5%9B%E4%B8%80%E6%9C%AC%E9%80%9A/"}]},{"title":"无8数的探究","date":"2020-07-04T10:53:00.000Z","path":"2020/07/04/none-8-number/","text":"什么是无八数简而述之，无八数就是“123456789中去掉8，得到的12345679，就是无八数 无八数的性质 无八数为什么会这样九位数111111111，除以9等于12345679! 更多无八数可以通过以下公式推导出十进制无八数类似数","raw":"title: 无8数的探究\nauthor: Xie Zheyuan\ntags:\n  - 数学\n  - 无八数\ncategories: []\ndate: 2020-07-04 18:53:00\n---\n# 什么是无八数\n简而述之，无八数就是“**123456789**中去掉**8**，得到的**12345679**，就是**无八数**\n<!--more-->\n## 无八数的性质\n![](/blogimages/none-eight-define.gif)\n\n![](/blogimages/none-eight-define2.gif)\n\n\n## 无八数为什么会这样\n九位数**111111111**，除以9等于**12345679**!\n![](/blogimages/111111111-and-none-eight.gif)\n\n# 更多无八数\n可以通过以下公式推导出十进制无八数类似数\n![](/blogimages/none-eight-create.gif)\n\n![](/blogimages/none-eight-use.gif)","content":"<h1 id=\"什么是无八数\"><a href=\"#什么是无八数\" class=\"headerlink\" title=\"什么是无八数\"></a>什么是无八数</h1><p>简而述之，无八数就是“<strong>123456789</strong>中去掉<strong>8</strong>，得到的<strong>12345679</strong>，就是<strong>无八数</strong></p>\n<a id=\"more\"></a>\n<h2 id=\"无八数的性质\"><a href=\"#无八数的性质\" class=\"headerlink\" title=\"无八数的性质\"></a>无八数的性质</h2><p><img src=\"/blogimages/none-eight-define.gif\" alt=\"\"></p>\n<p><img src=\"/blogimages/none-eight-define2.gif\" alt=\"\"></p>\n<h2 id=\"无八数为什么会这样\"><a href=\"#无八数为什么会这样\" class=\"headerlink\" title=\"无八数为什么会这样\"></a>无八数为什么会这样</h2><p>九位数<strong>111111111</strong>，除以9等于<strong>12345679</strong>!<br><img src=\"/blogimages/111111111-and-none-eight.gif\" alt=\"\"></p>\n<h1 id=\"更多无八数\"><a href=\"#更多无八数\" class=\"headerlink\" title=\"更多无八数\"></a>更多无八数</h1><p>可以通过以下公式推导出十进制无八数类似数<br><img src=\"/blogimages/none-eight-create.gif\" alt=\"\"></p>\n<p><img src=\"/blogimages/none-eight-use.gif\" alt=\"\"></p>\n","tags":[{"name":"数学","slug":"数学","permalink":"http://xiezheyuan.top/tags/%E6%95%B0%E5%AD%A6/"},{"name":"无八数","slug":"无八数","permalink":"http://xiezheyuan.top/tags/%E6%97%A0%E5%85%AB%E6%95%B0/"}]},{"title":"python简易数据分析","date":"2020-07-04T10:47:50.000Z","path":"2020/07/04/python-simple-data-analysis/","text":"python简易数据分析1、平均数(Average) 话不多说，直接上代码 1234def average(data): sum_ = sum(data) # 调用内置求和函数 a_val = sum_ / len(data) return a_val 2、方差(Variance)何谓方差? 方差是在概率论和统计方差衡量随机变量或一组数据时离散程度的度量。概率论中方差用来度量随机变量和其数学期望（即均值）之间的偏离程度。统计中的方差（样本方差）是每个样本值与全体样本值的平均数之差的平方值的平均数。在许多实际问题中，研究方差即偏离程度有着重要意义。—— 百度百科 代码12345678def variance(data): a_val = average(data) var = 0 for i in data: var += abs(a_val - i) ** 2 var /= len(data) return a_val 平均差(Mean Deviation)何谓平均差 平均差（Mean Deviation）是表示各个变量值之间差异程度的数值之一。指各个变量值同平均数的离差绝对值的算术平均数。 平均差异大，表明各标志值与算术平均数的差异程度越大，该算术平均数的代表性就越小；平均差越小，表明各标志值与算术平均数的差异程度越小，该算术平均数的代表性就越大。因离差和为零，离差的平均数不能将离差和除以离差的个数求得，而必须将离差取绝对数来消除正负号。平均差是反应各标志值与算术平均数之间的平均差异。——百度百科 代码12345678def mean(data): a_val = average(data) var = 0 for i in data: var += abs(a_val - i) var /= len(data) return var 标准差(Standard Deviation)何谓标准差 标准差（Standard Deviation） ，是离均差平方的算术平均数的平方根，用σ表示。在概率统计中最常使用作为统计分布程度上的测量。标准差是方差的算术平方根。标准差能反映一个数据集的离散程度。平均数相同的两组数据，标准差未必相同。——百度百科 代码12345from math import sqrtdef sd(data): v = sqrt(variance(data)) return v 极差(Range)这就更不用说啦！ 1234def range_(data): max_ = max(data) min_ = min(data) return max_ - min_ 完整代码完整代码如下所示（PEP通过） 1234567891011121314151617181920212223242526272829303132333435363738from math import sqrtdef average(data): sum_ = sum(data) a_val = sum_ / len(data) return a_valdef variance(data): a_val = average(data) var = 0 for i in data: var += abs(a_val - i) ** 2 var /= len(data) return a_valdef mean(data): a_val = average(data) var = 0 for i in data: var += abs(a_val - i) var /= len(data) return vardef sd(data): v = sqrt(variance(data)) return vdef range_(data): max_ = max(data) min_ = min(data) return max_ - min_","raw":"title: python简易数据分析\ntags:\n  - 计算机\n  - 数学\n  - python\n  - 数据分析\ndescription: 简易数据分析\ndate: 2020-07-04 18:47:50\n---\n#  python简易数据分析\n## 1、平均数(Average)\n<!--more-->\n话不多说，直接上代码\n```python\ndef average(data):\n    sum_ = sum(data) # 调用内置求和函数\n    a_val = sum_ / len(data)\n    return a_val\n```\n\n## 2、方差(Variance)\n### 何谓方差?\n> 方差是在概率论和统计方差衡量随机变量或一组数据时离散程度的度量。概率论中方差用来度量随机变量和其数学期望（即均值）之间的偏离程度。统计中的方差（样本方差）是每个样本值与全体样本值的平均数之差的平方值的平均数。在许多实际问题中，研究方差即偏离程度有着重要意义。\n>—— [百度百科](https://baike.baidu.com/item/%E6%96%B9%E5%B7%AE/3108412)\n\n![方差公式图片](/blogimages/variance.svg)\n### 代码\n```python\ndef variance(data):\n    a_val = average(data)\n    var = 0\n    for i in data:\n        var += abs(a_val - i) ** 2\n    \n    var /= len(data)\n    return a_val\n```\n\n## 平均差(Mean Deviation)\n### 何谓平均差\n> 平均差（Mean Deviation）是表示各个变量值之间差异程度的数值之一。指各个变量值同平均数的离差绝对值的算术平均数。\n  平均差异大，表明各标志值与算术平均数的差异程度越大，该算术平均数的代表性就越小；平均差越小，表明各标志值与算术平均数的差异程度越小，该算术平均数的代表性就越大。因离差和为零，离差的平均数不能将离差和除以离差的个数求得，而必须将离差取绝对数来消除正负号。平均差是反应各标志值与算术平均数之间的平均差异。\n>——[百度百科](https://baike.baidu.com/item/%E5%B9%B3%E5%9D%87%E5%B7%AE)\n\n![平均差公式图片](/blogimages/mean.svg)\n## 代码\n\n```python\ndef mean(data):\n    a_val = average(data)\n    var = 0\n    for i in data:\n        var += abs(a_val - i)\n\n    var /= len(data)\n    return var\n```\n\n## 标准差(Standard Deviation)\n\n### 何谓标准差\n> 标准差（Standard Deviation） ，是离均差平方的算术平均数的平方根，用σ表示。在概率统计中最常使用作为统计分布程度上的测量。标准差是方差的算术平方根。标准差能反映一个数据集的离散程度。平均数相同的两组数据，标准差未必相同。\n> ——[百度百科](https://baike.baidu.com/item/%E6%A0%87%E5%87%86%E5%B7%AE)\n\n### 代码\n```python\nfrom math import sqrt\n\ndef sd(data):\n    v = sqrt(variance(data))\n    return v\n```\n\n## 极差(Range)\n这就更不用说啦！\n```python\ndef range_(data):\n    max_ = max(data)\n    min_ = min(data)\n    return max_ - min_\n```\n\n## 完整代码\n完整代码如下所示（PEP通过）\n```python\nfrom math import sqrt\n\n\ndef average(data):\n    sum_ = sum(data)\n    a_val = sum_ / len(data)\n    return a_val\n\n\ndef variance(data):\n    a_val = average(data)\n    var = 0\n    for i in data:\n        var += abs(a_val - i) ** 2\n\n    var /= len(data)\n    return a_val\n\n\ndef mean(data):\n    a_val = average(data)\n    var = 0\n    for i in data:\n        var += abs(a_val - i)\n\n    var /= len(data)\n    return var\n\n\ndef sd(data):\n    v = sqrt(variance(data))\n    return v\n\n\ndef range_(data):\n    max_ = max(data)\n    min_ = min(data)\n    return max_ - min_\n\n```","content":"<h1 id=\"python简易数据分析\"><a href=\"#python简易数据分析\" class=\"headerlink\" title=\"python简易数据分析\"></a>python简易数据分析</h1><h2 id=\"1、平均数-Average\"><a href=\"#1、平均数-Average\" class=\"headerlink\" title=\"1、平均数(Average)\"></a>1、平均数(Average)</h2><a id=\"more\"></a>\n<p>话不多说，直接上代码</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">average</span><span class=\"params\">(data)</span>:</span></span><br><span class=\"line\">    sum_ = sum(data) <span class=\"comment\"># 调用内置求和函数</span></span><br><span class=\"line\">    a_val = sum_ / len(data)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a_val</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2、方差-Variance\"><a href=\"#2、方差-Variance\" class=\"headerlink\" title=\"2、方差(Variance)\"></a>2、方差(Variance)</h2><h3 id=\"何谓方差\"><a href=\"#何谓方差\" class=\"headerlink\" title=\"何谓方差?\"></a>何谓方差?</h3><blockquote>\n<p>方差是在概率论和统计方差衡量随机变量或一组数据时离散程度的度量。概率论中方差用来度量随机变量和其数学期望（即均值）之间的偏离程度。统计中的方差（样本方差）是每个样本值与全体样本值的平均数之差的平方值的平均数。在许多实际问题中，研究方差即偏离程度有着重要意义。<br>—— <a href=\"https://baike.baidu.com/item/%E6%96%B9%E5%B7%AE/3108412\" target=\"_blank\" rel=\"noopener\">百度百科</a></p>\n</blockquote>\n<p><img src=\"/blogimages/variance.svg\" alt=\"方差公式图片\"></p>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">variance</span><span class=\"params\">(data)</span>:</span></span><br><span class=\"line\">    a_val = average(data)</span><br><span class=\"line\">    var = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> data:</span><br><span class=\"line\">        var += abs(a_val - i) ** <span class=\"number\">2</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    var /= len(data)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a_val</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"平均差-Mean-Deviation\"><a href=\"#平均差-Mean-Deviation\" class=\"headerlink\" title=\"平均差(Mean Deviation)\"></a>平均差(Mean Deviation)</h2><h3 id=\"何谓平均差\"><a href=\"#何谓平均差\" class=\"headerlink\" title=\"何谓平均差\"></a>何谓平均差</h3><blockquote>\n<p>平均差（Mean Deviation）是表示各个变量值之间差异程度的数值之一。指各个变量值同平均数的离差绝对值的算术平均数。<br>  平均差异大，表明各标志值与算术平均数的差异程度越大，该算术平均数的代表性就越小；平均差越小，表明各标志值与算术平均数的差异程度越小，该算术平均数的代表性就越大。因离差和为零，离差的平均数不能将离差和除以离差的个数求得，而必须将离差取绝对数来消除正负号。平均差是反应各标志值与算术平均数之间的平均差异。<br>——<a href=\"https://baike.baidu.com/item/%E5%B9%B3%E5%9D%87%E5%B7%AE\" target=\"_blank\" rel=\"noopener\">百度百科</a></p>\n</blockquote>\n<p><img src=\"/blogimages/mean.svg\" alt=\"平均差公式图片\"></p>\n<h2 id=\"代码-1\"><a href=\"#代码-1\" class=\"headerlink\" title=\"代码\"></a>代码</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">mean</span><span class=\"params\">(data)</span>:</span></span><br><span class=\"line\">    a_val = average(data)</span><br><span class=\"line\">    var = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> data:</span><br><span class=\"line\">        var += abs(a_val - i)</span><br><span class=\"line\"></span><br><span class=\"line\">    var /= len(data)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> var</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"标准差-Standard-Deviation\"><a href=\"#标准差-Standard-Deviation\" class=\"headerlink\" title=\"标准差(Standard Deviation)\"></a>标准差(Standard Deviation)</h2><h3 id=\"何谓标准差\"><a href=\"#何谓标准差\" class=\"headerlink\" title=\"何谓标准差\"></a>何谓标准差</h3><blockquote>\n<p>标准差（Standard Deviation） ，是离均差平方的算术平均数的平方根，用σ表示。在概率统计中最常使用作为统计分布程度上的测量。标准差是方差的算术平方根。标准差能反映一个数据集的离散程度。平均数相同的两组数据，标准差未必相同。<br>——<a href=\"https://baike.baidu.com/item/%E6%A0%87%E5%87%86%E5%B7%AE\" target=\"_blank\" rel=\"noopener\">百度百科</a></p>\n</blockquote>\n<h3 id=\"代码-2\"><a href=\"#代码-2\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> math <span class=\"keyword\">import</span> sqrt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">sd</span><span class=\"params\">(data)</span>:</span></span><br><span class=\"line\">    v = sqrt(variance(data))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> v</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"极差-Range\"><a href=\"#极差-Range\" class=\"headerlink\" title=\"极差(Range)\"></a>极差(Range)</h2><p>这就更不用说啦！</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">range_</span><span class=\"params\">(data)</span>:</span></span><br><span class=\"line\">    max_ = max(data)</span><br><span class=\"line\">    min_ = min(data)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> max_ - min_</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"完整代码\"><a href=\"#完整代码\" class=\"headerlink\" title=\"完整代码\"></a>完整代码</h2><p>完整代码如下所示（PEP通过）</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> math <span class=\"keyword\">import</span> sqrt</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">average</span><span class=\"params\">(data)</span>:</span></span><br><span class=\"line\">    sum_ = sum(data)</span><br><span class=\"line\">    a_val = sum_ / len(data)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a_val</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">variance</span><span class=\"params\">(data)</span>:</span></span><br><span class=\"line\">    a_val = average(data)</span><br><span class=\"line\">    var = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> data:</span><br><span class=\"line\">        var += abs(a_val - i) ** <span class=\"number\">2</span></span><br><span class=\"line\"></span><br><span class=\"line\">    var /= len(data)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a_val</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">mean</span><span class=\"params\">(data)</span>:</span></span><br><span class=\"line\">    a_val = average(data)</span><br><span class=\"line\">    var = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> data:</span><br><span class=\"line\">        var += abs(a_val - i)</span><br><span class=\"line\"></span><br><span class=\"line\">    var /= len(data)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> var</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">sd</span><span class=\"params\">(data)</span>:</span></span><br><span class=\"line\">    v = sqrt(variance(data))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> v</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">range_</span><span class=\"params\">(data)</span>:</span></span><br><span class=\"line\">    max_ = max(data)</span><br><span class=\"line\">    min_ = min(data)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> max_ - min_</span><br></pre></td></tr></table></figure>","tags":[{"name":"计算机","slug":"计算机","permalink":"http://xiezheyuan.top/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/"},{"name":"数学","slug":"数学","permalink":"http://xiezheyuan.top/tags/%E6%95%B0%E5%AD%A6/"},{"name":"python","slug":"python","permalink":"http://xiezheyuan.top/tags/python/"},{"name":"数据分析","slug":"数据分析","permalink":"http://xiezheyuan.top/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"}]},{"title":"html 嵌入404公益页面","date":"2020-04-06T16:00:00.000Z","path":"2020/04/07/404page/","text":"大部分人在网上看到的公益404页面是如何写的呢？ 其实很简单！ 123456789101112131415&lt;!DOCTYPE html&gt;&lt;html lang=\"zh\"&gt;&lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;404 Not Found&lt;/title&gt; &lt;script type=\"text/javascript\" src=\"//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js\" charset=\"utf-8\" homePageUrl=\"自己的网站地址\" homePageName=\"回到我的主页\"&gt;&lt;/script&gt;&lt;/head&gt;&lt;body&gt;&lt;div class=\"footer\"&gt; &lt;p&gt;Copyright © 2020自己的名字. All Rights Reserved.&lt;/p&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 就区区13行，就实现了！ 首发于CSDN博客https://blog.csdn.net/pythonbilly","raw":"title: html 嵌入404公益页面\ntags:\n  - 计算机\n  - HTML\ndescription: 大部分人在网上看到的公益404页面是如何写的呢？\ndate: 2020-04-07 00:00:00\n---\n大部分人在网上看到的公益404页面是如何写的呢？\n<!--more-->\n\n其实很简单！\n```html\n<!DOCTYPE html>\n<html lang=\"zh\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>404 Not Found</title>\n\n    <script type=\"text/javascript\" src=\"//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js\" charset=\"utf-8\" homePageUrl=\"自己的网站地址\" homePageName=\"回到我的主页\"></script>\n</head>\n<body>\n\n<div class=\"footer\">\n    <p>Copyright © 2020自己的名字. All Rights Reserved.</p>\n</div>\n</body>\n</html>\n```\n\n就区区13行，就实现了！\n\n首发于CSDN博客https://blog.csdn.net/pythonbilly","content":"<p>大部分人在网上看到的公益404页面是如何写的呢？</p>\n<a id=\"more\"></a>\n\n<p>其实很简单！</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"zh\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>404 Not Found<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js\"</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"utf-8\"</span> <span class=\"attr\">homePageUrl</span>=<span class=\"string\">\"自己的网站地址\"</span> <span class=\"attr\">homePageName</span>=<span class=\"string\">\"回到我的主页\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"footer\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Copyright © 2020自己的名字. All Rights Reserved.<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>就区区13行，就实现了！</p>\n<p>首发于CSDN博客<a href=\"https://blog.csdn.net/pythonbilly\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/pythonbilly</a></p>\n","tags":[{"name":"计算机","slug":"计算机","permalink":"http://xiezheyuan.top/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/"},{"name":"HTML","slug":"HTML","permalink":"http://xiezheyuan.top/tags/HTML/"}]},{"title":"超完整Github开发指南","date":"2020-04-02T16:00:00.000Z","path":"2020/04/03/github-guide/","text":"0、目录 1、注册GitHub 账户2、创建第一个仓库 3、上传至仓库4、使用Github Pages创造自己的网站 1、注册GitHub 账户访问Github,若无意外，则效果为以下所示（Firefox) 输入用户名、邮箱（确保可用）、密码，点击Sign up for Github，再填写几个个人信息，就Well Done了！ 注册完后点击Sign in,填写用户名及密码即可。 然后就可以看到个人界面了！ 2、创建第一个仓库点击Repositories右侧的New，即可跳转至仓库创造页！ ​ 可以填写Repository name(仓库名称）、Description（仓库描述）等。 注：关于license：请访问Choose an open source license 3、上传至仓库1、下载GitHub Desktop 2、打开软件 3、克隆仓库 编写，点击COMMIT TO MASTER和PUSH ORIGN即可！ 4、使用Github Pages创造自己的网站新建一个仓库，以username.github.io 命名（username是指你的用户名）新建完成后，使用Github Desktop推送网页至该仓库。Q&amp;：万一网站做不好肿么办？A：1、使用Github主题：访问Settings-&gt;GitHub Pages-&gt;Theme Chooser-&gt;Change Theme 选择样式，不过好像只适合写主页，并且必须使用Markdown格式。2、使用模板网站，这里推荐HTML5 UP看到自己心仪的主题，可以选择Free Download，或者点击Live Demo查看预览。注：大家可以看看我的网站：xiezheyuan.github.io 5、为自己的项目创建Github Pages 网站与4、使用Github Pages创造自己的网站 类似，不过需要选择Settings-&gt;GitHub Pages-&gt;Source选择上传地址，默认为None，建议为master branch /docs folder，这样可以将网站与程序分开（master branch /docs folder指仅上传docs目录）首发于CSDN博客https://blog.csdn.net/pythonbilly","raw":"title: 超完整Github开发指南\ntags:\n  - 计算机\n  - Github\ndescription: Github开发指南\ndate: 2020-04-03 00:00:00\n---\n# 0、目录\n<!--more-->\n<a href=\"#first\">1、注册GitHub 账户</a>\n<a href=\"#second\">2、创建第一个仓库 </a>\n<a href=\"#third\">3、上传至仓库</a>\n<a name=\"#fourth\">4、使用Github Pages创造自己的网站</a>\n# 1、注册GitHub 账户\n访问[Github](http://www.github.com/),若无意外，则效果为以下所示（Firefox)\n\n![Github首页](/blogimages/github-mainpage.png)\n\n输入**用户名**、**邮箱（确保可用）**、**密码**，点击Sign up for Github，再填写几个个人信息，就Well Done了！\n\n注册完后点击Sign in,填写用户名及密码即可。\n\n![Github 登录页](/blogimages/github-login.png)\n\n\n\n\n\n\n\n然后就可以看到个人界面了！\n\n![Github 个人主页](/blogimages/github-logined.png)\n<a name=\"second\"></a>\n# 2、创建第一个仓库\n点击Repositories右侧的New，即可跳转至仓库创造页！\n\n​![仓库创造页](/blogimages/github-new.png)\n\n\n\n可以填写Repository name(仓库名称）、Description（仓库描述）等。\n\n注：关于license：请访问[Choose an open source license](https://choosealicense.com/)\n\n\n<a name=\"third\"></a>\n# 3、上传至仓库\n1、下载[GitHub Desktop](https://desktop.github.com/)\n\n2、打开软件\n\n3、克隆仓库\n\n![Github Desktop](/blogimages/github-desktop.png)\n\n编写，点击**COMMIT TO MASTER**和**PUSH ORIGN**即可！\n<a name=\"fourth\"></a>\n# 4、使用Github Pages创造自己的网站\n新建一个仓库，以**username.github.io** 命名（username是指你的用户名）\n新建完成后，使用Github Desktop推送网页至该仓库。\nQ&：万一网站做不好肿么办？\nA：\n1、使用Github主题：\n访问**Settings->GitHub Pages->Theme Chooser->Change Theme** 选择样式，不过好像只适合写主页，并且必须使用**Markdown**格式。\n2、使用模板网站，这里推荐[HTML5 UP](https://html5up.net/)\n![HTML5UP](/blogimages/htmlup.png)\n看到自己心仪的主题，可以选择**Free Download**，或者点击**Live Demo**查看预览。\n注：大家可以看看我的网站：[xiezheyuan.github.io](http://xiezheyuan.github.io/)\n\n<a name=\"fifth\"></a>\n\n# 5、为自己的项目创建Github Pages 网站\n与*4、使用Github Pages创造自己的网站* 类似，不过需要选择Settings->GitHub Pages->Source选择上传地址，默认为None，建议为**master branch /docs folder**，这样可以将网站与程序分开（**master branch /docs folder**指仅上传docs目录）\n首发于CSDN博客https://blog.csdn.net/pythonbilly","content":"<h1 id=\"0、目录\"><a href=\"#0、目录\" class=\"headerlink\" title=\"0、目录\"></a>0、目录</h1><a id=\"more\"></a>\n<p><a href=\"#first\">1、注册GitHub 账户</a><br><a href=\"#second\">2、创建第一个仓库 </a><br><a href=\"#third\">3、上传至仓库</a><br><a name=\"#fourth\">4、使用Github Pages创造自己的网站</a></p>\n<h1 id=\"1、注册GitHub-账户\"><a href=\"#1、注册GitHub-账户\" class=\"headerlink\" title=\"1、注册GitHub 账户\"></a>1、注册GitHub 账户</h1><p>访问<a href=\"http://www.github.com/\" target=\"_blank\" rel=\"noopener\">Github</a>,若无意外，则效果为以下所示（Firefox)</p>\n<p><img src=\"/blogimages/github-mainpage.png\" alt=\"Github首页\"></p>\n<p>输入<strong>用户名</strong>、<strong>邮箱（确保可用）</strong>、<strong>密码</strong>，点击Sign up for Github，再填写几个个人信息，就Well Done了！</p>\n<p>注册完后点击Sign in,填写用户名及密码即可。</p>\n<p><img src=\"/blogimages/github-login.png\" alt=\"Github 登录页\"></p>\n<p>然后就可以看到个人界面了！</p>\n<p><img src=\"/blogimages/github-logined.png\" alt=\"Github 个人主页\"><br><a name=\"second\"></a></p>\n<h1 id=\"2、创建第一个仓库\"><a href=\"#2、创建第一个仓库\" class=\"headerlink\" title=\"2、创建第一个仓库\"></a>2、创建第一个仓库</h1><p>点击Repositories右侧的New，即可跳转至仓库创造页！</p>\n<p>​<img src=\"/blogimages/github-new.png\" alt=\"仓库创造页\"></p>\n<p>可以填写Repository name(仓库名称）、Description（仓库描述）等。</p>\n<p>注：关于license：请访问<a href=\"https://choosealicense.com/\" target=\"_blank\" rel=\"noopener\">Choose an open source license</a></p>\n<p><a name=\"third\"></a></p>\n<h1 id=\"3、上传至仓库\"><a href=\"#3、上传至仓库\" class=\"headerlink\" title=\"3、上传至仓库\"></a>3、上传至仓库</h1><p>1、下载<a href=\"https://desktop.github.com/\" target=\"_blank\" rel=\"noopener\">GitHub Desktop</a></p>\n<p>2、打开软件</p>\n<p>3、克隆仓库</p>\n<p><img src=\"/blogimages/github-desktop.png\" alt=\"Github Desktop\"></p>\n<p>编写，点击<strong>COMMIT TO MASTER</strong>和<strong>PUSH ORIGN</strong>即可！<br><a name=\"fourth\"></a></p>\n<h1 id=\"4、使用Github-Pages创造自己的网站\"><a href=\"#4、使用Github-Pages创造自己的网站\" class=\"headerlink\" title=\"4、使用Github Pages创造自己的网站\"></a>4、使用Github Pages创造自己的网站</h1><p>新建一个仓库，以<strong>username.github.io</strong> 命名（username是指你的用户名）<br>新建完成后，使用Github Desktop推送网页至该仓库。<br>Q&amp;：万一网站做不好肿么办？<br>A：<br>1、使用Github主题：<br>访问<strong>Settings-&gt;GitHub Pages-&gt;Theme Chooser-&gt;Change Theme</strong> 选择样式，不过好像只适合写主页，并且必须使用<strong>Markdown</strong>格式。<br>2、使用模板网站，这里推荐<a href=\"https://html5up.net/\" target=\"_blank\" rel=\"noopener\">HTML5 UP</a><br><img src=\"/blogimages/htmlup.png\" alt=\"HTML5UP\"><br>看到自己心仪的主题，可以选择<strong>Free Download</strong>，或者点击<strong>Live Demo</strong>查看预览。<br>注：大家可以看看我的网站：<a href=\"http://xiezheyuan.github.io/\" target=\"_blank\" rel=\"noopener\">xiezheyuan.github.io</a></p>\n<p><a name=\"fifth\"></a></p>\n<h1 id=\"5、为自己的项目创建Github-Pages-网站\"><a href=\"#5、为自己的项目创建Github-Pages-网站\" class=\"headerlink\" title=\"5、为自己的项目创建Github Pages 网站\"></a>5、为自己的项目创建Github Pages 网站</h1><p>与<em>4、使用Github Pages创造自己的网站</em> 类似，不过需要选择Settings-&gt;GitHub Pages-&gt;Source选择上传地址，默认为None，建议为<strong>master branch /docs folder</strong>，这样可以将网站与程序分开（<strong>master branch /docs folder</strong>指仅上传docs目录）<br>首发于CSDN博客<a href=\"https://blog.csdn.net/pythonbilly\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/pythonbilly</a></p>\n","tags":[{"name":"计算机","slug":"计算机","permalink":"http://xiezheyuan.top/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/"},{"name":"Github","slug":"Github","permalink":"http://xiezheyuan.top/tags/Github/"}]},{"title":"python 制作CPU压力测试——圆周率计算","date":"2020-03-31T16:00:00.000Z","path":"2020/04/01/python-countpi/","text":"众所周知，反正弦函数asin有以下公式（如在计算器中是弧度制下）： 百度百科搜索三角函数公式，在泰勒展开式一节中有以下公式： 其中arcsin写错了，(2k+1)!!应该是(2k-1)!!另外x!!指双阶乘，不同于阶乘 其中arcsin写错了，(2k+1)!!应该是(2k-1)!!另外x!!指双阶乘，不同于阶乘 双阶乘实现： 123456def doubleFact(x): ans=1 for i in range(1,x+1): if i%2 == x%2: ans*=i return ans asin函数实现 123456def asin(x,t): answer=0 for k in range(0,t+1): a=(doubleFact(2*k-1)/doubleFact(2*k))*(pow(x,2*k+1)/(2*k+1)) print(\"k=%d,a=%s\"%(k,a)) answer+=a 其中x为角度（弧度），t为计算次数。 注：代码奇慢无比，不要真正用来计算pi，又慢精度又不高，建议只用来编写CPU压力测试程序！ 总代吗贴出来： 12345678910111213141516# import mathdef doubleFact(x): ans=1 for i in range(1,x+1): if i%2 == x%2: ans*=i return ansdef asin(x,t): answer=0 for k in range(0,t+1): a=(doubleFact(2*k-1)/doubleFact(2*k))*(pow(x,2*k+1)/(2*k+1)) print(\"k=%d,a=%s\"%(k,a)) answer+=a return answerprint(asin(1,100)*2) 计算结果： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102k=0,a=1.0k=1,a=0.16666666666666666k=2,a=0.07500000000000001k=3,a=0.04464285714285714k=4,a=0.030381944444444444k=5,a=0.022372159090909092k=6,a=0.017352764423076924k=7,a=0.013964843749999999k=8,a=0.011551800896139705k=9,a=0.009761609529194078k=10,a=0.008390335809616815k=11,a=0.007312525873598845k=12,a=0.006447210311889649k=13,a=0.005740037670841923k=14,a=0.005153309682319904k=15,a=0.004660143486915096k=16,a=0.004240907093679363k=17,a=0.003880964558837669k=18,a=0.0035692053938259347k=19,a=0.0032970595034734844k=20,a=0.0030578216492580306k=21,a=0.002846178401108942k=22,a=0.00265787063820729k=23,a=0.0024894486782468836k=24,a=0.002338091892111975k=25,a=0.0022014739737101384k=26,a=0.002077661032518167k=27,a=0.0019650336162772837k=28,a=0.0018622264064031273k=29,a=0.0017680811205154183k=30,a=0.0016816093935831068k=31,a=0.0016019632753514438k=32,a=0.0015284115961225677k=33,a=0.0014603208940791154k=34,a=0.0013971399176302534k=35,a=0.0013383869512751784k=36,a=0.0012836393876290285k=37,a=0.001232525098500017k=38,a=0.0011847152561624392k=39,a=0.0011399183307022236k=40,a=0.0010978750465914472k=41,a=0.001058354125872243k=42,a=0.0010211486797106276k=43,a=0.0009860731369833312k=44,a=0.0009529606197429564k=45,a=0.0009216606921836336k=46,a=0.0008920374230917098k=47,a=0.0008639677124658675k=48,a=0.000837339841602712k=49,a=0.0008120522129086703k=50,a=0.0007880122513582057k=51,a=0.0007651354441371649k=52,a=0.0007433444987958959k=53,a=0.0007225686033525614k=54,a=0.0007027427743614913k=55,a=0.0006838072810965503k=56,a=0.0006657071357767537k=57,a=0.000648391641245871k=58,a=0.0006318139887619102k=59,a=0.0006159308995984751k=60,a=0.0006007023050422869k=61,a=0.0005860910601175613k=62,a=0.0005720626870011989k=63,a=0.0005585851446315293k=64,a=0.0005456286214729855k=65,a=0.0005331653487922461k=66,a=0.0005211694321385132k=67,a=0.0005096166990104013k=68,a=0.000498484560941636k=69,a=0.0004877518884534234k=70,a=0.000477398897508034k=71,a=0.000467407046260082k=72,a=0.00045775894104274026k=73,a=0.00044843825064875664k=74,a=0.0004394296280731444k=75,a=0.00043071863897800795k=76,a=0.0004222916962219453k=77,a=0.0004141359998684339k=78,a=0.0004062394821508707k=79,a=0.00039859075692766545k=80,a=0.00039117907320994984k=81,a=0.0003839942723879085k=82,a=0.00037702674882018997k=83,a=0.000370267413484946k=84,a=0.0003637076604213038k=85,a=0.0003573393357169886k=86,a=0.0003511547088217658k=87,a=0.00034514644598773823k=88,a=0.00033930758565660254k=89,a=0.00033363151563102445k=90,a=0.0003281119518825554k=91,a=0.00032274291886219894k=92,a=0.00031751873119201474k=93,a=0.0003124339766271837k=94,a=0.00030748350018788655k=95,a=0.00030266238936928896k=96,a=0.0002979659603459907k=97,a=0.0002933897450945759k=98,a=0.0002889294793644786k=99,a=0.00028458109143332955k=100,a=0.00028034069158834043.0292687382573695 还是不是很精确啊！ PS：花了0.002991199493408203秒，虽然看起来很快，但是10000次花了快5分钟呢！ 首发于CSDN博客https://blog.csdn.net/pythonbilly","raw":"title: python 制作CPU压力测试——圆周率计算\ntags:\n  - 计算机\n  - 数学\n  - python\n  - 圆周率\ndescription: 制作CPU压力测试\ndate: 2020-04-01 00:00:00\n---\n众所周知，反正弦函数asin有以下公式（如在计算器中是弧度制下）：\n<!--more-->\n\n![asin(1)=pi/2](https://private.codecogs.com/gif.latex?%5Cfrac%7B%5Cpi%7D%7B2%7D%3Darcsin%5Cleft%20%28%201%20%5Cright%20%29)\n\n百度百科搜索三角函数公式，在泰勒展开式一节中有以下公式：\n![其中arcsin写错了，(2k+1)!!应该是(2k-1)!!\n另外x!!指双阶乘，不同于阶乘](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9ia2ltZy5jZG4uYmNlYm9zLmNvbS9waWMvYjk5OWE5MDE0YzA4NmUwNmNhZDMzMzFmMGQwODdiZjQwYWQxY2I2Zg?x-oss-process=image/format,png)\n> 其中arcsin写错了，(2k+1)!!应该是(2k-1)!!\n另外x!!指双阶乘，不同于阶乘\n\n其中arcsin写错了，(2k+1)!!应该是(2k-1)!!\n另外x!!指双阶乘，不同于阶乘\n\n\n双阶乘实现：\n```python\ndef doubleFact(x):\n    ans=1\n    for i in range(1,x+1):\n        if i%2 == x%2:\n            ans*=i\n    return ans\n```\nasin函数实现\n```python\ndef asin(x,t):\n    answer=0\n    for k in range(0,t+1):\n        a=(doubleFact(2*k-1)/doubleFact(2*k))*(pow(x,2*k+1)/(2*k+1))\n        print(\"k=%d,a=%s\"%(k,a))\n        answer+=a\n```\n其中x为角度（弧度），t为计算次数。\n\n注：代码奇慢无比，不要真正用来计算pi，又慢精度又不高，建议只用来编写CPU压力测试程序！\n\n总代吗贴出来：\n```python\n# import math\ndef doubleFact(x):\n    ans=1\n    for i in range(1,x+1):\n        if i%2 == x%2:\n            ans*=i\n    return ans\ndef asin(x,t):\n    answer=0\n    for k in range(0,t+1):\n        a=(doubleFact(2*k-1)/doubleFact(2*k))*(pow(x,2*k+1)/(2*k+1))\n        print(\"k=%d,a=%s\"%(k,a))\n        answer+=a\n\n    return answer\nprint(asin(1,100)*2)\n```\n计算结果：\n```python\nk=0,a=1.0\nk=1,a=0.16666666666666666\nk=2,a=0.07500000000000001\nk=3,a=0.04464285714285714\nk=4,a=0.030381944444444444\nk=5,a=0.022372159090909092\nk=6,a=0.017352764423076924\nk=7,a=0.013964843749999999\nk=8,a=0.011551800896139705\nk=9,a=0.009761609529194078\nk=10,a=0.008390335809616815\nk=11,a=0.007312525873598845\nk=12,a=0.006447210311889649\nk=13,a=0.005740037670841923\nk=14,a=0.005153309682319904\nk=15,a=0.004660143486915096\nk=16,a=0.004240907093679363\nk=17,a=0.003880964558837669\nk=18,a=0.0035692053938259347\nk=19,a=0.0032970595034734844\nk=20,a=0.0030578216492580306\nk=21,a=0.002846178401108942\nk=22,a=0.00265787063820729\nk=23,a=0.0024894486782468836\nk=24,a=0.002338091892111975\nk=25,a=0.0022014739737101384\nk=26,a=0.002077661032518167\nk=27,a=0.0019650336162772837\nk=28,a=0.0018622264064031273\nk=29,a=0.0017680811205154183\nk=30,a=0.0016816093935831068\nk=31,a=0.0016019632753514438\nk=32,a=0.0015284115961225677\nk=33,a=0.0014603208940791154\nk=34,a=0.0013971399176302534\nk=35,a=0.0013383869512751784\nk=36,a=0.0012836393876290285\nk=37,a=0.001232525098500017\nk=38,a=0.0011847152561624392\nk=39,a=0.0011399183307022236\nk=40,a=0.0010978750465914472\nk=41,a=0.001058354125872243\nk=42,a=0.0010211486797106276\nk=43,a=0.0009860731369833312\nk=44,a=0.0009529606197429564\nk=45,a=0.0009216606921836336\nk=46,a=0.0008920374230917098\nk=47,a=0.0008639677124658675\nk=48,a=0.000837339841602712\nk=49,a=0.0008120522129086703\nk=50,a=0.0007880122513582057\nk=51,a=0.0007651354441371649\nk=52,a=0.0007433444987958959\nk=53,a=0.0007225686033525614\nk=54,a=0.0007027427743614913\nk=55,a=0.0006838072810965503\nk=56,a=0.0006657071357767537\nk=57,a=0.000648391641245871\nk=58,a=0.0006318139887619102\nk=59,a=0.0006159308995984751\nk=60,a=0.0006007023050422869\nk=61,a=0.0005860910601175613\nk=62,a=0.0005720626870011989\nk=63,a=0.0005585851446315293\nk=64,a=0.0005456286214729855\nk=65,a=0.0005331653487922461\nk=66,a=0.0005211694321385132\nk=67,a=0.0005096166990104013\nk=68,a=0.000498484560941636\nk=69,a=0.0004877518884534234\nk=70,a=0.000477398897508034\nk=71,a=0.000467407046260082\nk=72,a=0.00045775894104274026\nk=73,a=0.00044843825064875664\nk=74,a=0.0004394296280731444\nk=75,a=0.00043071863897800795\nk=76,a=0.0004222916962219453\nk=77,a=0.0004141359998684339\nk=78,a=0.0004062394821508707\nk=79,a=0.00039859075692766545\nk=80,a=0.00039117907320994984\nk=81,a=0.0003839942723879085\nk=82,a=0.00037702674882018997\nk=83,a=0.000370267413484946\nk=84,a=0.0003637076604213038\nk=85,a=0.0003573393357169886\nk=86,a=0.0003511547088217658\nk=87,a=0.00034514644598773823\nk=88,a=0.00033930758565660254\nk=89,a=0.00033363151563102445\nk=90,a=0.0003281119518825554\nk=91,a=0.00032274291886219894\nk=92,a=0.00031751873119201474\nk=93,a=0.0003124339766271837\nk=94,a=0.00030748350018788655\nk=95,a=0.00030266238936928896\nk=96,a=0.0002979659603459907\nk=97,a=0.0002933897450945759\nk=98,a=0.0002889294793644786\nk=99,a=0.00028458109143332955\nk=100,a=0.0002803406915883404\n3.0292687382573695\n```\n还是不是很精确啊！\n\nPS：花了0.002991199493408203秒，虽然看起来很快，但是10000次花了快5分钟呢！\n\n\n首发于CSDN博客https://blog.csdn.net/pythonbilly","content":"<p>众所周知，反正弦函数asin有以下公式（如在计算器中是弧度制下）：</p>\n<a id=\"more\"></a>\n\n<p><img src=\"https://private.codecogs.com/gif.latex?%5Cfrac%7B%5Cpi%7D%7B2%7D%3Darcsin%5Cleft%20%28%201%20%5Cright%20%29\" alt=\"asin(1)=pi/2\"></p>\n<p>百度百科搜索三角函数公式，在泰勒展开式一节中有以下公式：<br><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly9ia2ltZy5jZG4uYmNlYm9zLmNvbS9waWMvYjk5OWE5MDE0YzA4NmUwNmNhZDMzMzFmMGQwODdiZjQwYWQxY2I2Zg?x-oss-process=image/format,png\" alt=\"其中arcsin写错了，(2k+1)!!应该是(2k-1)!!\n另外x!!指双阶乘，不同于阶乘\"></p>\n<blockquote>\n<p>其中arcsin写错了，(2k+1)!!应该是(2k-1)!!<br>另外x!!指双阶乘，不同于阶乘</p>\n</blockquote>\n<p>其中arcsin写错了，(2k+1)!!应该是(2k-1)!!<br>另外x!!指双阶乘，不同于阶乘</p>\n<p>双阶乘实现：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">doubleFact</span><span class=\"params\">(x)</span>:</span></span><br><span class=\"line\">    ans=<span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>,x+<span class=\"number\">1</span>):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> i%<span class=\"number\">2</span> == x%<span class=\"number\">2</span>:</span><br><span class=\"line\">            ans*=i</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ans</span><br></pre></td></tr></table></figure>\n<p>asin函数实现</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">asin</span><span class=\"params\">(x,t)</span>:</span></span><br><span class=\"line\">    answer=<span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> k <span class=\"keyword\">in</span> range(<span class=\"number\">0</span>,t+<span class=\"number\">1</span>):</span><br><span class=\"line\">        a=(doubleFact(<span class=\"number\">2</span>*k<span class=\"number\">-1</span>)/doubleFact(<span class=\"number\">2</span>*k))*(pow(x,<span class=\"number\">2</span>*k+<span class=\"number\">1</span>)/(<span class=\"number\">2</span>*k+<span class=\"number\">1</span>))</span><br><span class=\"line\">        print(<span class=\"string\">\"k=%d,a=%s\"</span>%(k,a))</span><br><span class=\"line\">        answer+=a</span><br></pre></td></tr></table></figure>\n<p>其中x为角度（弧度），t为计算次数。</p>\n<p>注：代码奇慢无比，不要真正用来计算pi，又慢精度又不高，建议只用来编写CPU压力测试程序！</p>\n<p>总代吗贴出来：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># import math</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">doubleFact</span><span class=\"params\">(x)</span>:</span></span><br><span class=\"line\">    ans=<span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>,x+<span class=\"number\">1</span>):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> i%<span class=\"number\">2</span> == x%<span class=\"number\">2</span>:</span><br><span class=\"line\">            ans*=i</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ans</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">asin</span><span class=\"params\">(x,t)</span>:</span></span><br><span class=\"line\">    answer=<span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> k <span class=\"keyword\">in</span> range(<span class=\"number\">0</span>,t+<span class=\"number\">1</span>):</span><br><span class=\"line\">        a=(doubleFact(<span class=\"number\">2</span>*k<span class=\"number\">-1</span>)/doubleFact(<span class=\"number\">2</span>*k))*(pow(x,<span class=\"number\">2</span>*k+<span class=\"number\">1</span>)/(<span class=\"number\">2</span>*k+<span class=\"number\">1</span>))</span><br><span class=\"line\">        print(<span class=\"string\">\"k=%d,a=%s\"</span>%(k,a))</span><br><span class=\"line\">        answer+=a</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> answer</span><br><span class=\"line\">print(asin(<span class=\"number\">1</span>,<span class=\"number\">100</span>)*<span class=\"number\">2</span>)</span><br></pre></td></tr></table></figure>\n<p>计算结果：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">k=<span class=\"number\">0</span>,a=<span class=\"number\">1.0</span></span><br><span class=\"line\">k=<span class=\"number\">1</span>,a=<span class=\"number\">0.16666666666666666</span></span><br><span class=\"line\">k=<span class=\"number\">2</span>,a=<span class=\"number\">0.07500000000000001</span></span><br><span class=\"line\">k=<span class=\"number\">3</span>,a=<span class=\"number\">0.04464285714285714</span></span><br><span class=\"line\">k=<span class=\"number\">4</span>,a=<span class=\"number\">0.030381944444444444</span></span><br><span class=\"line\">k=<span class=\"number\">5</span>,a=<span class=\"number\">0.022372159090909092</span></span><br><span class=\"line\">k=<span class=\"number\">6</span>,a=<span class=\"number\">0.017352764423076924</span></span><br><span class=\"line\">k=<span class=\"number\">7</span>,a=<span class=\"number\">0.013964843749999999</span></span><br><span class=\"line\">k=<span class=\"number\">8</span>,a=<span class=\"number\">0.011551800896139705</span></span><br><span class=\"line\">k=<span class=\"number\">9</span>,a=<span class=\"number\">0.009761609529194078</span></span><br><span class=\"line\">k=<span class=\"number\">10</span>,a=<span class=\"number\">0.008390335809616815</span></span><br><span class=\"line\">k=<span class=\"number\">11</span>,a=<span class=\"number\">0.007312525873598845</span></span><br><span class=\"line\">k=<span class=\"number\">12</span>,a=<span class=\"number\">0.006447210311889649</span></span><br><span class=\"line\">k=<span class=\"number\">13</span>,a=<span class=\"number\">0.005740037670841923</span></span><br><span class=\"line\">k=<span class=\"number\">14</span>,a=<span class=\"number\">0.005153309682319904</span></span><br><span class=\"line\">k=<span class=\"number\">15</span>,a=<span class=\"number\">0.004660143486915096</span></span><br><span class=\"line\">k=<span class=\"number\">16</span>,a=<span class=\"number\">0.004240907093679363</span></span><br><span class=\"line\">k=<span class=\"number\">17</span>,a=<span class=\"number\">0.003880964558837669</span></span><br><span class=\"line\">k=<span class=\"number\">18</span>,a=<span class=\"number\">0.0035692053938259347</span></span><br><span class=\"line\">k=<span class=\"number\">19</span>,a=<span class=\"number\">0.0032970595034734844</span></span><br><span class=\"line\">k=<span class=\"number\">20</span>,a=<span class=\"number\">0.0030578216492580306</span></span><br><span class=\"line\">k=<span class=\"number\">21</span>,a=<span class=\"number\">0.002846178401108942</span></span><br><span class=\"line\">k=<span class=\"number\">22</span>,a=<span class=\"number\">0.00265787063820729</span></span><br><span class=\"line\">k=<span class=\"number\">23</span>,a=<span class=\"number\">0.0024894486782468836</span></span><br><span class=\"line\">k=<span class=\"number\">24</span>,a=<span class=\"number\">0.002338091892111975</span></span><br><span class=\"line\">k=<span class=\"number\">25</span>,a=<span class=\"number\">0.0022014739737101384</span></span><br><span class=\"line\">k=<span class=\"number\">26</span>,a=<span class=\"number\">0.002077661032518167</span></span><br><span class=\"line\">k=<span class=\"number\">27</span>,a=<span class=\"number\">0.0019650336162772837</span></span><br><span class=\"line\">k=<span class=\"number\">28</span>,a=<span class=\"number\">0.0018622264064031273</span></span><br><span class=\"line\">k=<span class=\"number\">29</span>,a=<span class=\"number\">0.0017680811205154183</span></span><br><span class=\"line\">k=<span class=\"number\">30</span>,a=<span class=\"number\">0.0016816093935831068</span></span><br><span class=\"line\">k=<span class=\"number\">31</span>,a=<span class=\"number\">0.0016019632753514438</span></span><br><span class=\"line\">k=<span class=\"number\">32</span>,a=<span class=\"number\">0.0015284115961225677</span></span><br><span class=\"line\">k=<span class=\"number\">33</span>,a=<span class=\"number\">0.0014603208940791154</span></span><br><span class=\"line\">k=<span class=\"number\">34</span>,a=<span class=\"number\">0.0013971399176302534</span></span><br><span class=\"line\">k=<span class=\"number\">35</span>,a=<span class=\"number\">0.0013383869512751784</span></span><br><span class=\"line\">k=<span class=\"number\">36</span>,a=<span class=\"number\">0.0012836393876290285</span></span><br><span class=\"line\">k=<span class=\"number\">37</span>,a=<span class=\"number\">0.001232525098500017</span></span><br><span class=\"line\">k=<span class=\"number\">38</span>,a=<span class=\"number\">0.0011847152561624392</span></span><br><span class=\"line\">k=<span class=\"number\">39</span>,a=<span class=\"number\">0.0011399183307022236</span></span><br><span class=\"line\">k=<span class=\"number\">40</span>,a=<span class=\"number\">0.0010978750465914472</span></span><br><span class=\"line\">k=<span class=\"number\">41</span>,a=<span class=\"number\">0.001058354125872243</span></span><br><span class=\"line\">k=<span class=\"number\">42</span>,a=<span class=\"number\">0.0010211486797106276</span></span><br><span class=\"line\">k=<span class=\"number\">43</span>,a=<span class=\"number\">0.0009860731369833312</span></span><br><span class=\"line\">k=<span class=\"number\">44</span>,a=<span class=\"number\">0.0009529606197429564</span></span><br><span class=\"line\">k=<span class=\"number\">45</span>,a=<span class=\"number\">0.0009216606921836336</span></span><br><span class=\"line\">k=<span class=\"number\">46</span>,a=<span class=\"number\">0.0008920374230917098</span></span><br><span class=\"line\">k=<span class=\"number\">47</span>,a=<span class=\"number\">0.0008639677124658675</span></span><br><span class=\"line\">k=<span class=\"number\">48</span>,a=<span class=\"number\">0.000837339841602712</span></span><br><span class=\"line\">k=<span class=\"number\">49</span>,a=<span class=\"number\">0.0008120522129086703</span></span><br><span class=\"line\">k=<span class=\"number\">50</span>,a=<span class=\"number\">0.0007880122513582057</span></span><br><span class=\"line\">k=<span class=\"number\">51</span>,a=<span class=\"number\">0.0007651354441371649</span></span><br><span class=\"line\">k=<span class=\"number\">52</span>,a=<span class=\"number\">0.0007433444987958959</span></span><br><span class=\"line\">k=<span class=\"number\">53</span>,a=<span class=\"number\">0.0007225686033525614</span></span><br><span class=\"line\">k=<span class=\"number\">54</span>,a=<span class=\"number\">0.0007027427743614913</span></span><br><span class=\"line\">k=<span class=\"number\">55</span>,a=<span class=\"number\">0.0006838072810965503</span></span><br><span class=\"line\">k=<span class=\"number\">56</span>,a=<span class=\"number\">0.0006657071357767537</span></span><br><span class=\"line\">k=<span class=\"number\">57</span>,a=<span class=\"number\">0.000648391641245871</span></span><br><span class=\"line\">k=<span class=\"number\">58</span>,a=<span class=\"number\">0.0006318139887619102</span></span><br><span class=\"line\">k=<span class=\"number\">59</span>,a=<span class=\"number\">0.0006159308995984751</span></span><br><span class=\"line\">k=<span class=\"number\">60</span>,a=<span class=\"number\">0.0006007023050422869</span></span><br><span class=\"line\">k=<span class=\"number\">61</span>,a=<span class=\"number\">0.0005860910601175613</span></span><br><span class=\"line\">k=<span class=\"number\">62</span>,a=<span class=\"number\">0.0005720626870011989</span></span><br><span class=\"line\">k=<span class=\"number\">63</span>,a=<span class=\"number\">0.0005585851446315293</span></span><br><span class=\"line\">k=<span class=\"number\">64</span>,a=<span class=\"number\">0.0005456286214729855</span></span><br><span class=\"line\">k=<span class=\"number\">65</span>,a=<span class=\"number\">0.0005331653487922461</span></span><br><span class=\"line\">k=<span class=\"number\">66</span>,a=<span class=\"number\">0.0005211694321385132</span></span><br><span class=\"line\">k=<span class=\"number\">67</span>,a=<span class=\"number\">0.0005096166990104013</span></span><br><span class=\"line\">k=<span class=\"number\">68</span>,a=<span class=\"number\">0.000498484560941636</span></span><br><span class=\"line\">k=<span class=\"number\">69</span>,a=<span class=\"number\">0.0004877518884534234</span></span><br><span class=\"line\">k=<span class=\"number\">70</span>,a=<span class=\"number\">0.000477398897508034</span></span><br><span class=\"line\">k=<span class=\"number\">71</span>,a=<span class=\"number\">0.000467407046260082</span></span><br><span class=\"line\">k=<span class=\"number\">72</span>,a=<span class=\"number\">0.00045775894104274026</span></span><br><span class=\"line\">k=<span class=\"number\">73</span>,a=<span class=\"number\">0.00044843825064875664</span></span><br><span class=\"line\">k=<span class=\"number\">74</span>,a=<span class=\"number\">0.0004394296280731444</span></span><br><span class=\"line\">k=<span class=\"number\">75</span>,a=<span class=\"number\">0.00043071863897800795</span></span><br><span class=\"line\">k=<span class=\"number\">76</span>,a=<span class=\"number\">0.0004222916962219453</span></span><br><span class=\"line\">k=<span class=\"number\">77</span>,a=<span class=\"number\">0.0004141359998684339</span></span><br><span class=\"line\">k=<span class=\"number\">78</span>,a=<span class=\"number\">0.0004062394821508707</span></span><br><span class=\"line\">k=<span class=\"number\">79</span>,a=<span class=\"number\">0.00039859075692766545</span></span><br><span class=\"line\">k=<span class=\"number\">80</span>,a=<span class=\"number\">0.00039117907320994984</span></span><br><span class=\"line\">k=<span class=\"number\">81</span>,a=<span class=\"number\">0.0003839942723879085</span></span><br><span class=\"line\">k=<span class=\"number\">82</span>,a=<span class=\"number\">0.00037702674882018997</span></span><br><span class=\"line\">k=<span class=\"number\">83</span>,a=<span class=\"number\">0.000370267413484946</span></span><br><span class=\"line\">k=<span class=\"number\">84</span>,a=<span class=\"number\">0.0003637076604213038</span></span><br><span class=\"line\">k=<span class=\"number\">85</span>,a=<span class=\"number\">0.0003573393357169886</span></span><br><span class=\"line\">k=<span class=\"number\">86</span>,a=<span class=\"number\">0.0003511547088217658</span></span><br><span class=\"line\">k=<span class=\"number\">87</span>,a=<span class=\"number\">0.00034514644598773823</span></span><br><span class=\"line\">k=<span class=\"number\">88</span>,a=<span class=\"number\">0.00033930758565660254</span></span><br><span class=\"line\">k=<span class=\"number\">89</span>,a=<span class=\"number\">0.00033363151563102445</span></span><br><span class=\"line\">k=<span class=\"number\">90</span>,a=<span class=\"number\">0.0003281119518825554</span></span><br><span class=\"line\">k=<span class=\"number\">91</span>,a=<span class=\"number\">0.00032274291886219894</span></span><br><span class=\"line\">k=<span class=\"number\">92</span>,a=<span class=\"number\">0.00031751873119201474</span></span><br><span class=\"line\">k=<span class=\"number\">93</span>,a=<span class=\"number\">0.0003124339766271837</span></span><br><span class=\"line\">k=<span class=\"number\">94</span>,a=<span class=\"number\">0.00030748350018788655</span></span><br><span class=\"line\">k=<span class=\"number\">95</span>,a=<span class=\"number\">0.00030266238936928896</span></span><br><span class=\"line\">k=<span class=\"number\">96</span>,a=<span class=\"number\">0.0002979659603459907</span></span><br><span class=\"line\">k=<span class=\"number\">97</span>,a=<span class=\"number\">0.0002933897450945759</span></span><br><span class=\"line\">k=<span class=\"number\">98</span>,a=<span class=\"number\">0.0002889294793644786</span></span><br><span class=\"line\">k=<span class=\"number\">99</span>,a=<span class=\"number\">0.00028458109143332955</span></span><br><span class=\"line\">k=<span class=\"number\">100</span>,a=<span class=\"number\">0.0002803406915883404</span></span><br><span class=\"line\"><span class=\"number\">3.0292687382573695</span></span><br></pre></td></tr></table></figure>\n<p>还是不是很精确啊！</p>\n<p>PS：花了0.002991199493408203秒，虽然看起来很快，但是10000次花了快5分钟呢！</p>\n<p>首发于CSDN博客<a href=\"https://blog.csdn.net/pythonbilly\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/pythonbilly</a></p>\n","tags":[{"name":"计算机","slug":"计算机","permalink":"http://xiezheyuan.top/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/"},{"name":"数学","slug":"数学","permalink":"http://xiezheyuan.top/tags/%E6%95%B0%E5%AD%A6/"},{"name":"python","slug":"python","permalink":"http://xiezheyuan.top/tags/python/"},{"name":"圆周率","slug":"圆周率","permalink":"http://xiezheyuan.top/tags/%E5%9C%86%E5%91%A8%E7%8E%87/"}]},{"title":"python实践项目-shop","date":"2019-10-26T13:48:18.000Z","path":"2019/10/26/python实践项目-shop/","text":"python实践项目-shop练习 文件打开/保存 cmd应用 prettytable 场景 使用CMD程序，实现商店管理python3+pycharm 源码getPicke.py 初始化PICKLE 1234data=\"[[\\\"6953787355327\\\",\\\"晨光24色水彩笔\\\",\\\"25\\\"]]\"obj=open(\"libray/shop.pkl\",\"w\")obj.write(data)obj.close() pklAdmin.py 管理 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879print(\"Shop1.0 Pkl File Admin Program\")import prettytablewhile True: cmd=input(\"&gt;&gt;&gt;\") if cmd == \"quit\": print(\"exiting...\") break elif cmd == \"exit\": print(\"Do you want to exit now?\") option=input(\"(y/&lt;Other&gt;)\") if(option == \"y\" or option == \"Y\"): print(\"exiting...\") break else: print(\"Canceled to exit\") elif cmd == \"read\" or cmd == \"Read\": print(\"You Want To Read Commodities.\") tobj=prettytable.PrettyTable([ \"Bar code\", \"Trade name\", \"Price(RMB)\" ]) o=eval(open(\"libray/shop.pkl\",\"r\",encoding=\"gbk\").read()) for i in o: tobj.add_row(i) print(tobj) elif cmd == \"add\": print(\"You Want To Add a Commodity\") s=input(\"Input Commodity Name...\") p=input(\"Input Commodity Price...\") b = input(\"Input Commodity Bar Code...\") o = eval(open(\"libray/shop.pkl\", \"r\",encoding=\"gbk\").read()) o.append([b,s,p]) obj=open(\"libray/shop.pkl\",\"w\") obj.write(str(o)) obj.close() print(\"Now,Add Right...\") tobj=prettytable.PrettyTable([ \"Bar code\", \"Trade name\", \"Price(RMB)\" ]) for i in o: tobj.add_row(i) print(tobj) elif cmd == \"help\": print(\"PklAdmin Document\") print(''' add:Add items to program directory. read/Read:Displays all saved items. exit:Quit program(can cancel). quit:Quit program(can't cancel) del/delete/remove:Remove items to program directory. help:Displays this. ''') elif cmd == \"del\" or cmd == \"delete\" or cmd == \"remove\": print(\"You want to delete a commodity\") b=input(\"Input Commodity Bar Code...\") o = eval(open(\"libray/shop.pkl\", \"r\", encoding=\"gbk\").read()) for i in o: if(i[0] == b): print(\"Find!\",i) o.remove(i) print(\"Now,Remove Right...\") tobj = prettytable.PrettyTable([ \"Bar code\", \"Trade name\", \"Price(RMB)\" ]) for i in o: tobj.add_row(i) print(tobj) obj = open(\"libray/shop.pkl\", \"w\") obj.write(str(o)) obj.close() else: print(\"No such command!Please verify the input.\") main1.py 主程序 12345678910111213141516171819202122print(\"SHOP 1.0 COMMAND PROGRAM\")def get(b): o = eval(open(\"libray/shop.pkl\", \"r\", encoding=\"gbk\").read()) for i in o: if(i[0] == b): return i return Falsewhile True: print(\"input item times...\") t=input(\"...\") if(t == None or t == \"\"): break t=int(t) sum_=0 for i in range(t): p=get(input(\"Bar code...\")) if(p == False): print(\"Don't have this item\") continue sum_= sum_ + int(p[2]) print(p[1],\"RMB\"+p[2]) print(\"Sum is %d\"%sum_) 详情请访问我的码云仓库下个项目再见，See you","raw":"title: python实践项目-shop\nauthor: Xie Zheyuan\ntags:\n  - python\ncategories: []\ndate: 2019-10-26 21:48:18\n---\n## python实践项目-shop\n ## 练习\n\n - 文件打开/保存\n - cmd应用\n - prettytable\n <!--more-->\n ## 场景\n \n使用CMD程序，实现商店管理\npython3+pycharm\n## 源码\n**getPicke.py** 初始化PICKLE\n\n```python\ndata=\"[[\\\"6953787355327\\\",\\\"晨光24色水彩笔\\\",\\\"25\\\"]]\"\nobj=open(\"libray/shop.pkl\",\"w\")\nobj.write(data)\nobj.close()\n```\n**pklAdmin.py** 管理\n\n```python\nprint(\"Shop1.0 Pkl File Admin Program\")\nimport prettytable\nwhile True:\n    cmd=input(\">>>\")\n    if cmd == \"quit\":\n        print(\"exiting...\")\n        break\n    elif cmd == \"exit\":\n        print(\"Do you want to exit now?\")\n        option=input(\"(y/<Other>)\")\n        if(option == \"y\" or option == \"Y\"):\n            print(\"exiting...\")\n            break\n        else:\n            print(\"Canceled to exit\")\n    elif cmd == \"read\" or cmd == \"Read\":\n        print(\"You Want To Read Commodities.\")\n        tobj=prettytable.PrettyTable([\n            \"Bar code\",\n            \"Trade name\",\n            \"Price(RMB)\"\n        ])\n        o=eval(open(\"libray/shop.pkl\",\"r\",encoding=\"gbk\").read())\n        for i in o:\n            tobj.add_row(i)\n        print(tobj)\n    elif cmd == \"add\":\n        print(\"You Want To Add a Commodity\")\n        s=input(\"Input Commodity Name...\")\n        p=input(\"Input Commodity Price...\")\n        b = input(\"Input Commodity Bar Code...\")\n        o = eval(open(\"libray/shop.pkl\", \"r\",encoding=\"gbk\").read())\n        o.append([b,s,p])\n        obj=open(\"libray/shop.pkl\",\"w\")\n        obj.write(str(o))\n        obj.close()\n        print(\"Now,Add Right...\")\n        tobj=prettytable.PrettyTable([\n            \"Bar code\",\n            \"Trade name\",\n            \"Price(RMB)\"\n        ])\n        for i in o:\n            tobj.add_row(i)\n        print(tobj)\n    elif cmd == \"help\":\n        print(\"PklAdmin Document\")\n        print('''\n        add:Add items to program directory.\n        read/Read:Displays all saved items.\n        exit:Quit program(can cancel).\n        quit:Quit program(can't cancel)\n        del/delete/remove:Remove items to program directory.\n        help:Displays this.\n        ''')\n    elif cmd == \"del\" or cmd == \"delete\" or cmd == \"remove\":\n        print(\"You want to delete a commodity\")\n        b=input(\"Input Commodity Bar Code...\")\n        o = eval(open(\"libray/shop.pkl\", \"r\", encoding=\"gbk\").read())\n        for i in o:\n            if(i[0] == b):\n                print(\"Find!\",i)\n                o.remove(i)\n        print(\"Now,Remove Right...\")\n        tobj = prettytable.PrettyTable([\n            \"Bar code\",\n            \"Trade name\",\n            \"Price(RMB)\"\n        ])\n        for i in o:\n            tobj.add_row(i)\n        print(tobj)\n        obj = open(\"libray/shop.pkl\", \"w\")\n        obj.write(str(o))\n        obj.close()\n\n\n    else:\n        print(\"No such command!Please verify the input.\")\n\n\n```\n**main1.py** 主程序\n\n```python\nprint(\"SHOP 1.0 COMMAND PROGRAM\")\ndef get(b):\n    o = eval(open(\"libray/shop.pkl\", \"r\", encoding=\"gbk\").read())\n    for i in o:\n        if(i[0] == b):\n            return i\n    return False\nwhile True:\n    print(\"input item times...\")\n    t=input(\"...\")\n    if(t == None or t == \"\"):\n        break\n    t=int(t)\n    sum_=0\n    for i in range(t):\n        p=get(input(\"Bar code...\"))\n        if(p == False):\n            print(\"Don't have this item\")\n            continue\n        sum_= sum_ + int(p[2])\n        print(p[1],\"RMB\"+p[2])\n    print(\"Sum is %d\"%sum_)\n```\n详情请访问[我的码云仓库](https://gitee.com/pybilly/shop)\n下个项目再见，See you","content":"<h2 id=\"python实践项目-shop\"><a href=\"#python实践项目-shop\" class=\"headerlink\" title=\"python实践项目-shop\"></a>python实践项目-shop</h2><h2 id=\"练习\"><a href=\"#练习\" class=\"headerlink\" title=\"练习\"></a>练习</h2><ul>\n<li>文件打开/保存</li>\n<li>cmd应用</li>\n<li>prettytable<a id=\"more\"></a>\n<h2 id=\"场景\"><a href=\"#场景\" class=\"headerlink\" title=\"场景\"></a>场景</h2></li>\n</ul>\n<p>使用CMD程序，实现商店管理<br>python3+pycharm</p>\n<h2 id=\"源码\"><a href=\"#源码\" class=\"headerlink\" title=\"源码\"></a>源码</h2><p><strong>getPicke.py</strong> 初始化PICKLE</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">data=<span class=\"string\">\"[[\\\"6953787355327\\\",\\\"晨光24色水彩笔\\\",\\\"25\\\"]]\"</span></span><br><span class=\"line\">obj=open(<span class=\"string\">\"libray/shop.pkl\"</span>,<span class=\"string\">\"w\"</span>)</span><br><span class=\"line\">obj.write(data)</span><br><span class=\"line\">obj.close()</span><br></pre></td></tr></table></figure>\n<p><strong>pklAdmin.py</strong> 管理</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(<span class=\"string\">\"Shop1.0 Pkl File Admin Program\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">import</span> prettytable</span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">    cmd=input(<span class=\"string\">\"&gt;&gt;&gt;\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> cmd == <span class=\"string\">\"quit\"</span>:</span><br><span class=\"line\">        print(<span class=\"string\">\"exiting...\"</span>)</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">elif</span> cmd == <span class=\"string\">\"exit\"</span>:</span><br><span class=\"line\">        print(<span class=\"string\">\"Do you want to exit now?\"</span>)</span><br><span class=\"line\">        option=input(<span class=\"string\">\"(y/&lt;Other&gt;)\"</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(option == <span class=\"string\">\"y\"</span> <span class=\"keyword\">or</span> option == <span class=\"string\">\"Y\"</span>):</span><br><span class=\"line\">            print(<span class=\"string\">\"exiting...\"</span>)</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"Canceled to exit\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> cmd == <span class=\"string\">\"read\"</span> <span class=\"keyword\">or</span> cmd == <span class=\"string\">\"Read\"</span>:</span><br><span class=\"line\">        print(<span class=\"string\">\"You Want To Read Commodities.\"</span>)</span><br><span class=\"line\">        tobj=prettytable.PrettyTable([</span><br><span class=\"line\">            <span class=\"string\">\"Bar code\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"Trade name\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"Price(RMB)\"</span></span><br><span class=\"line\">        ])</span><br><span class=\"line\">        o=eval(open(<span class=\"string\">\"libray/shop.pkl\"</span>,<span class=\"string\">\"r\"</span>,encoding=<span class=\"string\">\"gbk\"</span>).read())</span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> o:</span><br><span class=\"line\">            tobj.add_row(i)</span><br><span class=\"line\">        print(tobj)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> cmd == <span class=\"string\">\"add\"</span>:</span><br><span class=\"line\">        print(<span class=\"string\">\"You Want To Add a Commodity\"</span>)</span><br><span class=\"line\">        s=input(<span class=\"string\">\"Input Commodity Name...\"</span>)</span><br><span class=\"line\">        p=input(<span class=\"string\">\"Input Commodity Price...\"</span>)</span><br><span class=\"line\">        b = input(<span class=\"string\">\"Input Commodity Bar Code...\"</span>)</span><br><span class=\"line\">        o = eval(open(<span class=\"string\">\"libray/shop.pkl\"</span>, <span class=\"string\">\"r\"</span>,encoding=<span class=\"string\">\"gbk\"</span>).read())</span><br><span class=\"line\">        o.append([b,s,p])</span><br><span class=\"line\">        obj=open(<span class=\"string\">\"libray/shop.pkl\"</span>,<span class=\"string\">\"w\"</span>)</span><br><span class=\"line\">        obj.write(str(o))</span><br><span class=\"line\">        obj.close()</span><br><span class=\"line\">        print(<span class=\"string\">\"Now,Add Right...\"</span>)</span><br><span class=\"line\">        tobj=prettytable.PrettyTable([</span><br><span class=\"line\">            <span class=\"string\">\"Bar code\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"Trade name\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"Price(RMB)\"</span></span><br><span class=\"line\">        ])</span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> o:</span><br><span class=\"line\">            tobj.add_row(i)</span><br><span class=\"line\">        print(tobj)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> cmd == <span class=\"string\">\"help\"</span>:</span><br><span class=\"line\">        print(<span class=\"string\">\"PklAdmin Document\"</span>)</span><br><span class=\"line\">        print(<span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">        add:Add items to program directory.</span></span><br><span class=\"line\"><span class=\"string\">        read/Read:Displays all saved items.</span></span><br><span class=\"line\"><span class=\"string\">        exit:Quit program(can cancel).</span></span><br><span class=\"line\"><span class=\"string\">        quit:Quit program(can't cancel)</span></span><br><span class=\"line\"><span class=\"string\">        del/delete/remove:Remove items to program directory.</span></span><br><span class=\"line\"><span class=\"string\">        help:Displays this.</span></span><br><span class=\"line\"><span class=\"string\">        '''</span>)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> cmd == <span class=\"string\">\"del\"</span> <span class=\"keyword\">or</span> cmd == <span class=\"string\">\"delete\"</span> <span class=\"keyword\">or</span> cmd == <span class=\"string\">\"remove\"</span>:</span><br><span class=\"line\">        print(<span class=\"string\">\"You want to delete a commodity\"</span>)</span><br><span class=\"line\">        b=input(<span class=\"string\">\"Input Commodity Bar Code...\"</span>)</span><br><span class=\"line\">        o = eval(open(<span class=\"string\">\"libray/shop.pkl\"</span>, <span class=\"string\">\"r\"</span>, encoding=<span class=\"string\">\"gbk\"</span>).read())</span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> o:</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(i[<span class=\"number\">0</span>] == b):</span><br><span class=\"line\">                print(<span class=\"string\">\"Find!\"</span>,i)</span><br><span class=\"line\">                o.remove(i)</span><br><span class=\"line\">        print(<span class=\"string\">\"Now,Remove Right...\"</span>)</span><br><span class=\"line\">        tobj = prettytable.PrettyTable([</span><br><span class=\"line\">            <span class=\"string\">\"Bar code\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"Trade name\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"Price(RMB)\"</span></span><br><span class=\"line\">        ])</span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> o:</span><br><span class=\"line\">            tobj.add_row(i)</span><br><span class=\"line\">        print(tobj)</span><br><span class=\"line\">        obj = open(<span class=\"string\">\"libray/shop.pkl\"</span>, <span class=\"string\">\"w\"</span>)</span><br><span class=\"line\">        obj.write(str(o))</span><br><span class=\"line\">        obj.close()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        print(<span class=\"string\">\"No such command!Please verify the input.\"</span>)</span><br></pre></td></tr></table></figure>\n<p><strong>main1.py</strong> 主程序</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(<span class=\"string\">\"SHOP 1.0 COMMAND PROGRAM\"</span>)</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get</span><span class=\"params\">(b)</span>:</span></span><br><span class=\"line\">    o = eval(open(<span class=\"string\">\"libray/shop.pkl\"</span>, <span class=\"string\">\"r\"</span>, encoding=<span class=\"string\">\"gbk\"</span>).read())</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> o:</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(i[<span class=\"number\">0</span>] == b):</span><br><span class=\"line\">            <span class=\"keyword\">return</span> i</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"input item times...\"</span>)</span><br><span class=\"line\">    t=input(<span class=\"string\">\"...\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(t == <span class=\"literal\">None</span> <span class=\"keyword\">or</span> t == <span class=\"string\">\"\"</span>):</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">    t=int(t)</span><br><span class=\"line\">    sum_=<span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(t):</span><br><span class=\"line\">        p=get(input(<span class=\"string\">\"Bar code...\"</span>))</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(p == <span class=\"literal\">False</span>):</span><br><span class=\"line\">            print(<span class=\"string\">\"Don't have this item\"</span>)</span><br><span class=\"line\">            <span class=\"keyword\">continue</span></span><br><span class=\"line\">        sum_= sum_ + int(p[<span class=\"number\">2</span>])</span><br><span class=\"line\">        print(p[<span class=\"number\">1</span>],<span class=\"string\">\"RMB\"</span>+p[<span class=\"number\">2</span>])</span><br><span class=\"line\">    print(<span class=\"string\">\"Sum is %d\"</span>%sum_)</span><br></pre></td></tr></table></figure>\n<p>详情请访问<a href=\"https://gitee.com/pybilly/shop\" target=\"_blank\" rel=\"noopener\">我的码云仓库</a><br>下个项目再见，See you</p>\n","tags":[{"name":"python","slug":"python","permalink":"http://xiezheyuan.top/tags/python/"}]},{"title":"python 猿编程模块（一）ybc_speech","date":"2019-10-05T16:00:00.000Z","path":"2019/10/06/python-ybc-module-ybcspeech/","text":"首先先安装模块 1C:\\Python36\\python.exe -m pip install ybc-speech record:录制音频 123456789101112131415161718def record(filename, seconds=__SECONDS, to_dir=__TO_DIR, rate=__RATE, channels=__CHANNELS, chunk=__CHANNELS): \"\"\" 功能：录制音频文件。 参数 filename 是录制生成的语音文件的名字， 可选参数 seconds 是录制时长（单位：秒），默认 5 秒， 可选参数 to_dir 是存放语音文件的目录，默认为当前目录， 可选参数 rate 是录制采样率，1 代表 16000，0 代表 8000，默认为 1， 可选参数 channels 是声道，默认 1， 可选参数 chunk 是一次读取的字节数，默认 1024， 返回：录制的音频文件的路径。 \"\"\" 示例：1234import ybc_speech as simport oss.record(\"aaa.wav\",10)os.system(\"aaa.wav\") voice2text:语音转文字 123456789101112def voice2text(filename='', rate=__RATE, format_type=__FORMAT_TYPE): \"\"\" 功能：把语音文件转换成文字。 参数 filename 是当前目录下期望转换成文字的语音文件的名字， 可选参数 rate 是语音文件的采样率，1 代表 16000，0 代表 8000，默认为 1， 可选参数 format_type 是语音文件的类型，默认 PCM 格式， 返回：转换成的文字。 \"\"\" 示例：123import ybc_speech as s#import osprint(s.voice2text(\"aaa.wav\")) text2voice:语音合成 123456789101112131415161718192021222324def text2voice(text, filename, speaker=__SPEAKER, speed=__SPEED, aht=__AHT, apc=__APC, volume=__VOLUME, _format=__FORMAT, rate=__RATE): \"\"\" 功能：把文字转换成语音。 参数 text 是待转换的文字， 参数 filename 是生成的语音文件的名字， 可选参数 speaker 是发音人，1 代表小刚（男声），2 代表小云（女声），默认为1， 可选参数 speed 是语速，1 代表正常速度，0.5 代表慢速，2 代表快速，默认为1， 可选参数 aht 是音高，默认为 0， 可选参数 apc 是音色，默认为 58， 可选参数 volume 是音量，默认为 100， 可选参数 _format 是语音文件的格式，1 代表 PCM，2 代表 WAV，3代表 MP3，默认为 2 ， 可选参数 rate 是语音采样率，1 代表 16000，0 代表 8000，默认为 1， 返回：生成的语音文件的名字。 \"\"\" 示例：1234import ybc_speech as simport oss.text2voice(\"Hello\",\"hello.wav\",2)os.system(\"hello.wav\") speak:播放便捷函数 12345678910111213141516def speak(text='', speaker=__SPEAKER, speed=__SPEED, aht=__AHT, apc=__APC): \"\"\" 功能：朗读一段文字。 参数 text 是待朗读的文字， 可选参数 speaker 是发音人，1 代表小刚（男声），2 代表小云（女声），默认为1， 可选参数 speed 是语速，1 代表正常速度，0.5 代表慢速，2 代表快速，默认为1， 可选参数 aht 是音高，默认为 0， 可选参数 apc 是音色，默认为 58， 返回：无。 \"\"\" 常量表 123456789101112__RATE = 16000__FORMAT_TYPE = 2__SECONDS = 5__TO_DIR = None__CHANNELS = 1__CHUNK = 1024__SPEAKER = 1__SPEED = 1__AHT = 0__APC = 58__VOLUME = 100__FORMAT = 2 首发于CSDN博客https://blog.csdn.net/pythonbilly","raw":"title: python 猿编程模块（一）ybc_speech\ntags:\n  - 计算机\n  - python\n  - 猿编程\ndescription: 猿编程模块 ybc_speech\ndate: 2019-10-06 00:00:00\n---\n首先先安装模块\n\n```bash\nC:\\Python36\\python.exe -m pip install ybc-speech\n```\n<!--more-->\n**record**:录制音频\n```python\ndef record(filename, seconds=__SECONDS, to_dir=__TO_DIR, rate=__RATE, channels=__CHANNELS, chunk=__CHANNELS):\n    \"\"\"\n    功能：录制音频文件。\n\n    参数 filename 是录制生成的语音文件的名字，\n\n    可选参数 seconds 是录制时长（单位：秒），默认 5 秒，\n\n    可选参数 to_dir 是存放语音文件的目录，默认为当前目录，\n\n    可选参数 rate 是录制采样率，1 代表 16000，0 代表 8000，默认为 1，\n\n    可选参数 channels 是声道，默认 1，\n\n    可选参数 chunk 是一次读取的字节数，默认 1024，\n\n    返回：录制的音频文件的路径。\n    \"\"\"\n```\n\n##### 示例：\n\n```python\nimport ybc_speech as s\nimport os\ns.record(\"aaa.wav\",10)\nos.system(\"aaa.wav\")\n```\n**voice2text**:语音转文字\n\n```python\ndef voice2text(filename='', rate=__RATE, format_type=__FORMAT_TYPE):\n    \"\"\"\n    功能：把语音文件转换成文字。\n\n    参数 filename 是当前目录下期望转换成文字的语音文件的名字，\n\n    可选参数 rate 是语音文件的采样率，1 代表 16000，0 代表 8000，默认为 1，\n\n    可选参数 format_type 是语音文件的类型，默认 PCM 格式，\n\n    返回：转换成的文字。\n    \"\"\"\n```\n##### 示例：\n\n```python\nimport ybc_speech as s\n#import os\nprint(s.voice2text(\"aaa.wav\"))\n```\n**text2voice**:语音合成\n\n```python\ndef text2voice(text, filename, speaker=__SPEAKER, speed=__SPEED, aht=__AHT, apc=__APC, volume=__VOLUME, _format=__FORMAT, rate=__RATE):\n    \"\"\"\n    功能：把文字转换成语音。\n\n    参数 text 是待转换的文字，\n\n    参数 filename 是生成的语音文件的名字，\n\n    可选参数 speaker 是发音人，1 代表小刚（男声），2 代表小云（女声），默认为1，\n\n    可选参数 speed 是语速，1 代表正常速度，0.5 代表慢速，2 代表快速，默认为1，\n\n    可选参数 aht 是音高，默认为 0，\n\n    可选参数 apc 是音色，默认为 58，\n\n    可选参数 volume 是音量，默认为 100，\n\n    可选参数 _format 是语音文件的格式，1 代表 PCM，2 代表 WAV，3代表 MP3，默认为 2 ，\n\n    可选参数 rate 是语音采样率，1 代表 16000，0 代表 8000，默认为 1，\n\n    返回：生成的语音文件的名字。\n    \"\"\"\n```\n##### 示例：\n\n```python\nimport ybc_speech as s\nimport os\ns.text2voice(\"Hello\",\"hello.wav\",2)\nos.system(\"hello.wav\")\n```\n**speak**:播放便捷函数\n\n```python\ndef speak(text='', speaker=__SPEAKER, speed=__SPEED, aht=__AHT, apc=__APC):\n    \"\"\"\n    功能：朗读一段文字。\n\n    参数 text 是待朗读的文字，\n\n    可选参数 speaker 是发音人，1 代表小刚（男声），2 代表小云（女声），默认为1，\n\n    可选参数 speed 是语速，1 代表正常速度，0.5 代表慢速，2 代表快速，默认为1，\n\n    可选参数 aht 是音高，默认为 0，\n\n    可选参数 apc 是音色，默认为 58，\n\n    返回：无。\n    \"\"\"\n```\n**常量表**\n\n```python\n__RATE = 16000\n__FORMAT_TYPE = 2\n__SECONDS = 5\n__TO_DIR = None\n__CHANNELS = 1\n__CHUNK = 1024\n__SPEAKER = 1\n__SPEED = 1\n__AHT = 0\n__APC = 58\n__VOLUME = 100\n__FORMAT = 2\n\n\n```\n首发于CSDN博客https://blog.csdn.net/pythonbilly","content":"<p>首先先安装模块</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">C:\\Python36\\python.exe -m pip install ybc-speech</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<p><strong>record</strong>:录制音频</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">record</span><span class=\"params\">(filename, seconds=__SECONDS, to_dir=__TO_DIR, rate=__RATE, channels=__CHANNELS, chunk=__CHANNELS)</span>:</span></span><br><span class=\"line\">    <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">    功能：录制音频文件。</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    参数 filename 是录制生成的语音文件的名字，</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    可选参数 seconds 是录制时长（单位：秒），默认 5 秒，</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    可选参数 to_dir 是存放语音文件的目录，默认为当前目录，</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    可选参数 rate 是录制采样率，1 代表 16000，0 代表 8000，默认为 1，</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    可选参数 channels 是声道，默认 1，</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    可选参数 chunk 是一次读取的字节数，默认 1024，</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    返回：录制的音频文件的路径。</span></span><br><span class=\"line\"><span class=\"string\">    \"\"\"</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"示例：\"><a href=\"#示例：\" class=\"headerlink\" title=\"示例：\"></a>示例：</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> ybc_speech <span class=\"keyword\">as</span> s</span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\">s.record(<span class=\"string\">\"aaa.wav\"</span>,<span class=\"number\">10</span>)</span><br><span class=\"line\">os.system(<span class=\"string\">\"aaa.wav\"</span>)</span><br></pre></td></tr></table></figure>\n<p><strong>voice2text</strong>:语音转文字</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">voice2text</span><span class=\"params\">(filename=<span class=\"string\">''</span>, rate=__RATE, format_type=__FORMAT_TYPE)</span>:</span></span><br><span class=\"line\">    <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">    功能：把语音文件转换成文字。</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    参数 filename 是当前目录下期望转换成文字的语音文件的名字，</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    可选参数 rate 是语音文件的采样率，1 代表 16000，0 代表 8000，默认为 1，</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    可选参数 format_type 是语音文件的类型，默认 PCM 格式，</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    返回：转换成的文字。</span></span><br><span class=\"line\"><span class=\"string\">    \"\"\"</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"示例：-1\"><a href=\"#示例：-1\" class=\"headerlink\" title=\"示例：\"></a>示例：</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> ybc_speech <span class=\"keyword\">as</span> s</span><br><span class=\"line\"><span class=\"comment\">#import os</span></span><br><span class=\"line\">print(s.voice2text(<span class=\"string\">\"aaa.wav\"</span>))</span><br></pre></td></tr></table></figure>\n<p><strong>text2voice</strong>:语音合成</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">text2voice</span><span class=\"params\">(text, filename, speaker=__SPEAKER, speed=__SPEED, aht=__AHT, apc=__APC, volume=__VOLUME, _format=__FORMAT, rate=__RATE)</span>:</span></span><br><span class=\"line\">    <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">    功能：把文字转换成语音。</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    参数 text 是待转换的文字，</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    参数 filename 是生成的语音文件的名字，</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    可选参数 speaker 是发音人，1 代表小刚（男声），2 代表小云（女声），默认为1，</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    可选参数 speed 是语速，1 代表正常速度，0.5 代表慢速，2 代表快速，默认为1，</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    可选参数 aht 是音高，默认为 0，</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    可选参数 apc 是音色，默认为 58，</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    可选参数 volume 是音量，默认为 100，</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    可选参数 _format 是语音文件的格式，1 代表 PCM，2 代表 WAV，3代表 MP3，默认为 2 ，</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    可选参数 rate 是语音采样率，1 代表 16000，0 代表 8000，默认为 1，</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    返回：生成的语音文件的名字。</span></span><br><span class=\"line\"><span class=\"string\">    \"\"\"</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"示例：-2\"><a href=\"#示例：-2\" class=\"headerlink\" title=\"示例：\"></a>示例：</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> ybc_speech <span class=\"keyword\">as</span> s</span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\">s.text2voice(<span class=\"string\">\"Hello\"</span>,<span class=\"string\">\"hello.wav\"</span>,<span class=\"number\">2</span>)</span><br><span class=\"line\">os.system(<span class=\"string\">\"hello.wav\"</span>)</span><br></pre></td></tr></table></figure>\n<p><strong>speak</strong>:播放便捷函数</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">speak</span><span class=\"params\">(text=<span class=\"string\">''</span>, speaker=__SPEAKER, speed=__SPEED, aht=__AHT, apc=__APC)</span>:</span></span><br><span class=\"line\">    <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">    功能：朗读一段文字。</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    参数 text 是待朗读的文字，</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    可选参数 speaker 是发音人，1 代表小刚（男声），2 代表小云（女声），默认为1，</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    可选参数 speed 是语速，1 代表正常速度，0.5 代表慢速，2 代表快速，默认为1，</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    可选参数 aht 是音高，默认为 0，</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    可选参数 apc 是音色，默认为 58，</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    返回：无。</span></span><br><span class=\"line\"><span class=\"string\">    \"\"\"</span></span><br></pre></td></tr></table></figure>\n<p><strong>常量表</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">__RATE = <span class=\"number\">16000</span></span><br><span class=\"line\">__FORMAT_TYPE = <span class=\"number\">2</span></span><br><span class=\"line\">__SECONDS = <span class=\"number\">5</span></span><br><span class=\"line\">__TO_DIR = <span class=\"literal\">None</span></span><br><span class=\"line\">__CHANNELS = <span class=\"number\">1</span></span><br><span class=\"line\">__CHUNK = <span class=\"number\">1024</span></span><br><span class=\"line\">__SPEAKER = <span class=\"number\">1</span></span><br><span class=\"line\">__SPEED = <span class=\"number\">1</span></span><br><span class=\"line\">__AHT = <span class=\"number\">0</span></span><br><span class=\"line\">__APC = <span class=\"number\">58</span></span><br><span class=\"line\">__VOLUME = <span class=\"number\">100</span></span><br><span class=\"line\">__FORMAT = <span class=\"number\">2</span></span><br></pre></td></tr></table></figure>\n<p>首发于CSDN博客<a href=\"https://blog.csdn.net/pythonbilly\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/pythonbilly</a></p>\n","tags":[{"name":"计算机","slug":"计算机","permalink":"http://xiezheyuan.top/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/"},{"name":"python","slug":"python","permalink":"http://xiezheyuan.top/tags/python/"},{"name":"猿编程","slug":"猿编程","permalink":"http://xiezheyuan.top/tags/%E7%8C%BF%E7%BC%96%E7%A8%8B/"}]}]